
timing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00001994  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001920  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000092  00800100  00800100  00001994  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001994  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000019c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00001a00  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010de  00000000  00000000  00001a68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009d0  00000000  00000000  00002b46  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000869  00000000  00000000  00003516  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000178  00000000  00000000  00003d80  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000059e  00000000  00000000  00003ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005b2  00000000  00000000  00004496  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00004a48  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	6b c0       	rjmp	.+214    	; 0xd8 <__ctors_end>
       2:	00 00       	nop
       4:	7a c0       	rjmp	.+244    	; 0xfa <__bad_interrupt>
       6:	00 00       	nop
       8:	78 c0       	rjmp	.+240    	; 0xfa <__bad_interrupt>
       a:	00 00       	nop
       c:	76 c0       	rjmp	.+236    	; 0xfa <__bad_interrupt>
       e:	00 00       	nop
      10:	74 c0       	rjmp	.+232    	; 0xfa <__bad_interrupt>
      12:	00 00       	nop
      14:	72 c0       	rjmp	.+228    	; 0xfa <__bad_interrupt>
      16:	00 00       	nop
      18:	70 c0       	rjmp	.+224    	; 0xfa <__bad_interrupt>
      1a:	00 00       	nop
      1c:	6e c0       	rjmp	.+220    	; 0xfa <__bad_interrupt>
      1e:	00 00       	nop
      20:	6c c0       	rjmp	.+216    	; 0xfa <__bad_interrupt>
      22:	00 00       	nop
      24:	6a c0       	rjmp	.+212    	; 0xfa <__bad_interrupt>
      26:	00 00       	nop
      28:	68 c0       	rjmp	.+208    	; 0xfa <__bad_interrupt>
      2a:	00 00       	nop
      2c:	66 c0       	rjmp	.+204    	; 0xfa <__bad_interrupt>
      2e:	00 00       	nop
      30:	64 c0       	rjmp	.+200    	; 0xfa <__bad_interrupt>
      32:	00 00       	nop
      34:	62 c0       	rjmp	.+196    	; 0xfa <__bad_interrupt>
      36:	00 00       	nop
      38:	60 c0       	rjmp	.+192    	; 0xfa <__bad_interrupt>
      3a:	00 00       	nop
      3c:	5e c0       	rjmp	.+188    	; 0xfa <__bad_interrupt>
      3e:	00 00       	nop
      40:	5d c0       	rjmp	.+186    	; 0xfc <__vector_16>
      42:	00 00       	nop
      44:	5a c0       	rjmp	.+180    	; 0xfa <__bad_interrupt>
      46:	00 00       	nop
      48:	58 c0       	rjmp	.+176    	; 0xfa <__bad_interrupt>
      4a:	00 00       	nop
      4c:	56 c0       	rjmp	.+172    	; 0xfa <__bad_interrupt>
      4e:	00 00       	nop
      50:	54 c0       	rjmp	.+168    	; 0xfa <__bad_interrupt>
      52:	00 00       	nop
      54:	52 c0       	rjmp	.+164    	; 0xfa <__bad_interrupt>
      56:	00 00       	nop
      58:	50 c0       	rjmp	.+160    	; 0xfa <__bad_interrupt>
      5a:	00 00       	nop
      5c:	4e c0       	rjmp	.+156    	; 0xfa <__bad_interrupt>
      5e:	00 00       	nop
      60:	4c c0       	rjmp	.+152    	; 0xfa <__bad_interrupt>
      62:	00 00       	nop
      64:	4a c0       	rjmp	.+148    	; 0xfa <__bad_interrupt>
      66:	00 00       	nop
      68:	48 c0       	rjmp	.+144    	; 0xfa <__bad_interrupt>
      6a:	00 00       	nop
      6c:	46 c0       	rjmp	.+140    	; 0xfa <__bad_interrupt>
      6e:	00 00       	nop
      70:	44 c0       	rjmp	.+136    	; 0xfa <__bad_interrupt>
      72:	00 00       	nop
      74:	42 c0       	rjmp	.+132    	; 0xfa <__bad_interrupt>
      76:	00 00       	nop
      78:	40 c0       	rjmp	.+128    	; 0xfa <__bad_interrupt>
      7a:	00 00       	nop
      7c:	3e c0       	rjmp	.+124    	; 0xfa <__bad_interrupt>
      7e:	00 00       	nop
      80:	3c c0       	rjmp	.+120    	; 0xfa <__bad_interrupt>
      82:	00 00       	nop
      84:	3a c0       	rjmp	.+116    	; 0xfa <__bad_interrupt>
      86:	00 00       	nop
      88:	38 c0       	rjmp	.+112    	; 0xfa <__bad_interrupt>
      8a:	00 00       	nop
      8c:	08 4a       	sbci	r16, 0xA8	; 168
      8e:	d7 3b       	cpi	r29, 0xB7	; 183
      90:	3b ce       	rjmp	.-906    	; 0xfffffd08 <__eeprom_end+0xff7efd08>
      92:	01 6e       	ori	r16, 0xE1	; 225
      94:	84 bc       	out	0x24, r8	; 36
      96:	bf fd       	.word	0xfdbf	; ????
      98:	c1 2f       	mov	r28, r17
      9a:	3d 6c       	ori	r19, 0xCD	; 205
      9c:	74 31       	cpi	r23, 0x14	; 20
      9e:	9a bd       	out	0x2a, r25	; 42
      a0:	56 83       	std	Z+6, r21	; 0x06
      a2:	3d da       	rcall	.-2950   	; 0xfffff51e <__eeprom_end+0xff7ef51e>
      a4:	3d 00       	.word	0x003d	; ????
      a6:	c7 7f       	andi	r28, 0xF7	; 247
      a8:	11 be       	out	0x31, r1	; 49
      aa:	d9 e4       	ldi	r29, 0x49	; 73
      ac:	bb 4c       	sbci	r27, 0xCB	; 203
      ae:	3e 91       	ld	r19, -X
      b0:	6b aa       	std	Y+51, r6	; 0x33
      b2:	aa be       	out	0x3a, r10	; 58
      b4:	00 00       	nop
      b6:	00 80       	ld	r0, Z
      b8:	3f 05       	cpc	r19, r15
      ba:	a8 4c       	sbci	r26, 0xC8	; 200
      bc:	cd b2       	in	r12, 0x1d	; 29
      be:	d4 4e       	sbci	r29, 0xE4	; 228
      c0:	b9 38       	cpi	r27, 0x89	; 137
      c2:	36 a9       	ldd	r19, Z+54	; 0x36
      c4:	02 0c       	add	r0, r2
      c6:	50 b9       	out	0x00, r21	; 0
      c8:	91 86       	std	Z+9, r9	; 0x09
      ca:	88 08       	sbc	r8, r8
      cc:	3c a6       	std	Y+44, r3	; 0x2c
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	2a be       	out	0x3a, r2	; 58
      d2:	00 00       	nop
      d4:	00 80       	ld	r0, Z
      d6:	3f 00       	.word	0x003f	; ????

000000d8 <__ctors_end>:
      d8:	11 24       	eor	r1, r1
      da:	1f be       	out	0x3f, r1	; 63
      dc:	cf ef       	ldi	r28, 0xFF	; 255
      de:	d0 e1       	ldi	r29, 0x10	; 16
      e0:	de bf       	out	0x3e, r29	; 62
      e2:	cd bf       	out	0x3d, r28	; 61

000000e4 <__do_clear_bss>:
      e4:	21 e0       	ldi	r18, 0x01	; 1
      e6:	a0 e0       	ldi	r26, 0x00	; 0
      e8:	b1 e0       	ldi	r27, 0x01	; 1
      ea:	01 c0       	rjmp	.+2      	; 0xee <.do_clear_bss_start>

000000ec <.do_clear_bss_loop>:
      ec:	1d 92       	st	X+, r1

000000ee <.do_clear_bss_start>:
      ee:	a2 39       	cpi	r26, 0x92	; 146
      f0:	b2 07       	cpc	r27, r18
      f2:	e1 f7       	brne	.-8      	; 0xec <.do_clear_bss_loop>
      f4:	da d3       	rcall	.+1972   	; 0x8aa <main>
      f6:	0c 94 8e 0c 	jmp	0x191c	; 0x191c <_exit>

000000fa <__bad_interrupt>:
      fa:	82 cf       	rjmp	.-252    	; 0x0 <__vectors>

000000fc <__vector_16>:
	{
		OCR3A = 250;
	}
	else
	{
		OCR3A = 550;
      fc:	1f 92       	push	r1
      fe:	0f 92       	push	r0
     100:	0f b6       	in	r0, 0x3f	; 63
     102:	0f 92       	push	r0
     104:	11 24       	eor	r1, r1
     106:	0b b6       	in	r0, 0x3b	; 59
     108:	0f 92       	push	r0
     10a:	2f 93       	push	r18
     10c:	3f 93       	push	r19
     10e:	4f 93       	push	r20
     110:	5f 93       	push	r21
     112:	6f 93       	push	r22
     114:	7f 93       	push	r23
     116:	8f 93       	push	r24
     118:	9f 93       	push	r25
     11a:	af 93       	push	r26
     11c:	bf 93       	push	r27
     11e:	ef 93       	push	r30
     120:	ff 93       	push	r31
     122:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <dt>
     126:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <dt+0x1>
     12a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <dt+0x2>
     12e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <dt+0x3>
     132:	2f e6       	ldi	r18, 0x6F	; 111
     134:	32 e1       	ldi	r19, 0x12	; 18
     136:	43 e0       	ldi	r20, 0x03	; 3
     138:	5b e3       	ldi	r21, 0x3B	; 59
     13a:	0e 94 4c 09 	call	0x1298	; 0x1298 <__addsf3>
     13e:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <dt>
     142:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <dt+0x1>
     146:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <dt+0x2>
     14a:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <dt+0x3>
     14e:	83 e8       	ldi	r24, 0x83	; 131
     150:	82 bf       	out	0x32, r24	; 50
     152:	ff 91       	pop	r31
     154:	ef 91       	pop	r30
     156:	bf 91       	pop	r27
     158:	af 91       	pop	r26
     15a:	9f 91       	pop	r25
     15c:	8f 91       	pop	r24
     15e:	7f 91       	pop	r23
     160:	6f 91       	pop	r22
     162:	5f 91       	pop	r21
     164:	4f 91       	pop	r20
     166:	3f 91       	pop	r19
     168:	2f 91       	pop	r18
     16a:	0f 90       	pop	r0
     16c:	0b be       	out	0x3b, r0	; 59
     16e:	0f 90       	pop	r0
     170:	0f be       	out	0x3f, r0	; 63
     172:	0f 90       	pop	r0
     174:	1f 90       	pop	r1
     176:	18 95       	reti

00000178 <alphacal>:
	}
}
void alphacal(double data)
{
	alpha = (100-fabs(data))/100;
     178:	9b 01       	movw	r18, r22
     17a:	ac 01       	movw	r20, r24
     17c:	5f 77       	andi	r21, 0x7F	; 127
     17e:	60 e0       	ldi	r22, 0x00	; 0
     180:	70 e0       	ldi	r23, 0x00	; 0
     182:	88 ec       	ldi	r24, 0xC8	; 200
     184:	92 e4       	ldi	r25, 0x42	; 66
     186:	0e 94 4b 09 	call	0x1296	; 0x1296 <__subsf3>
     18a:	20 e0       	ldi	r18, 0x00	; 0
     18c:	30 e0       	ldi	r19, 0x00	; 0
     18e:	48 ec       	ldi	r20, 0xC8	; 200
     190:	52 e4       	ldi	r21, 0x42	; 66
     192:	0e 94 df 09 	call	0x13be	; 0x13be <__divsf3>
     196:	60 93 8c 01 	sts	0x018C, r22	; 0x80018c <alpha>
     19a:	70 93 8d 01 	sts	0x018D, r23	; 0x80018d <alpha+0x1>
     19e:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <alpha+0x2>
     1a2:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <alpha+0x3>
     1a6:	08 95       	ret

000001a8 <twi_write>:



void twi_write(unsigned char address,unsigned char data)
{ 
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);	//START
     1a8:	94 ea       	ldi	r25, 0xA4	; 164
     1aa:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

	while(!(TWCR & (1<<TWINT))); //TWINT flag 기다림 
     1ae:	e4 e7       	ldi	r30, 0x74	; 116
     1b0:	f0 e0       	ldi	r31, 0x00	; 0
     1b2:	90 81       	ld	r25, Z
     1b4:	99 23       	and	r25, r25
     1b6:	ec f7       	brge	.-6      	; 0x1b2 <twi_write+0xa>
	while((TWSR&0xF8) != 0x08);  //START 상태(08) 기다림  
     1b8:	e1 e7       	ldi	r30, 0x71	; 113
     1ba:	f0 e0       	ldi	r31, 0x00	; 0
     1bc:	90 81       	ld	r25, Z
     1be:	98 7f       	andi	r25, 0xF8	; 248
     1c0:	98 30       	cpi	r25, 0x08	; 8
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <twi_write+0x14>

	TWDR = 0b11010000;			 //AD(1101000)+W(0) 
     1c4:	90 ed       	ldi	r25, 0xD0	; 208
     1c6:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1<<TWINT)|(1<<TWEN); //전송 
     1ca:	94 e8       	ldi	r25, 0x84	; 132
     1cc:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

	while(!(TWCR & (1<<TWINT))); 
     1d0:	e4 e7       	ldi	r30, 0x74	; 116
     1d2:	f0 e0       	ldi	r31, 0x00	; 0
     1d4:	90 81       	ld	r25, Z
     1d6:	99 23       	and	r25, r25
     1d8:	ec f7       	brge	.-6      	; 0x1d4 <twi_write+0x2c>
	while((TWSR&0xF8) != 0x18);  //SLA+W ACK 상태(18) 기다림
     1da:	e1 e7       	ldi	r30, 0x71	; 113
     1dc:	f0 e0       	ldi	r31, 0x00	; 0
     1de:	90 81       	ld	r25, Z
     1e0:	98 7f       	andi	r25, 0xF8	; 248
     1e2:	98 31       	cpi	r25, 0x18	; 24
     1e4:	e1 f7       	brne	.-8      	; 0x1de <twi_write+0x36>

	TWDR = address; 			 //register address
     1e6:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1<<TWINT)|(1<<TWEN); //전송
     1ea:	84 e8       	ldi	r24, 0x84	; 132
     1ec:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

	while(!(TWCR & (1<<TWINT)));
     1f0:	e4 e7       	ldi	r30, 0x74	; 116
     1f2:	f0 e0       	ldi	r31, 0x00	; 0
     1f4:	80 81       	ld	r24, Z
     1f6:	88 23       	and	r24, r24
     1f8:	ec f7       	brge	.-6      	; 0x1f4 <twi_write+0x4c>
	while((TWSR&0xF8) != 0x28);  //Data ACK 상태(28) 기다림 
     1fa:	e1 e7       	ldi	r30, 0x71	; 113
     1fc:	f0 e0       	ldi	r31, 0x00	; 0
     1fe:	80 81       	ld	r24, Z
     200:	88 7f       	andi	r24, 0xF8	; 248
     202:	88 32       	cpi	r24, 0x28	; 40
     204:	e1 f7       	brne	.-8      	; 0x1fe <twi_write+0x56>

	TWDR = data; 				 //data 
     206:	60 93 73 00 	sts	0x0073, r22	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1<<TWINT)|(1<<TWEN); //전송  
     20a:	84 e8       	ldi	r24, 0x84	; 132
     20c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

	while(!(TWCR & (1<<TWINT)));
     210:	e4 e7       	ldi	r30, 0x74	; 116
     212:	f0 e0       	ldi	r31, 0x00	; 0
     214:	80 81       	ld	r24, Z
     216:	88 23       	and	r24, r24
     218:	ec f7       	brge	.-6      	; 0x214 <twi_write+0x6c>
	while((TWSR&0xF8) != 0x28);
     21a:	e1 e7       	ldi	r30, 0x71	; 113
     21c:	f0 e0       	ldi	r31, 0x00	; 0
     21e:	80 81       	ld	r24, Z
     220:	88 7f       	andi	r24, 0xF8	; 248
     222:	88 32       	cpi	r24, 0x28	; 40
     224:	e1 f7       	brne	.-8      	; 0x21e <twi_write+0x76>

	TWCR = (1<<TWINT)|(1<<TWSTO)|(1<<TWEN); //STOP
     226:	84 e9       	ldi	r24, 0x94	; 148
     228:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     22c:	08 95       	ret

0000022e <twi_read>:

unsigned char twi_read(char address)
{ 
	unsigned char data;

	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);	//START
     22e:	94 ea       	ldi	r25, 0xA4	; 164
     230:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

	while(!(TWCR & (1<<TWINT))); //TWINT flag 기다림 
     234:	e4 e7       	ldi	r30, 0x74	; 116
     236:	f0 e0       	ldi	r31, 0x00	; 0
     238:	90 81       	ld	r25, Z
     23a:	99 23       	and	r25, r25
     23c:	ec f7       	brge	.-6      	; 0x238 <twi_read+0xa>
	while((TWSR&0xF8) != 0x08);  //START 상태(08) 기다림  
     23e:	e1 e7       	ldi	r30, 0x71	; 113
     240:	f0 e0       	ldi	r31, 0x00	; 0
     242:	90 81       	ld	r25, Z
     244:	98 7f       	andi	r25, 0xF8	; 248
     246:	98 30       	cpi	r25, 0x08	; 8
     248:	e1 f7       	brne	.-8      	; 0x242 <twi_read+0x14>

	TWDR = 0b11010000;			 //AD(1101000)+W(0) 
     24a:	90 ed       	ldi	r25, 0xD0	; 208
     24c:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1<<TWINT)|(1<<TWEN); //전송 
     250:	94 e8       	ldi	r25, 0x84	; 132
     252:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

	while(!(TWCR & (1<<TWINT))); 
     256:	e4 e7       	ldi	r30, 0x74	; 116
     258:	f0 e0       	ldi	r31, 0x00	; 0
     25a:	90 81       	ld	r25, Z
     25c:	99 23       	and	r25, r25
     25e:	ec f7       	brge	.-6      	; 0x25a <twi_read+0x2c>
	while((TWSR&0xF8) != 0x18);  //SLA+W ACK 상태(18) 기다림
     260:	e1 e7       	ldi	r30, 0x71	; 113
     262:	f0 e0       	ldi	r31, 0x00	; 0
     264:	90 81       	ld	r25, Z
     266:	98 7f       	andi	r25, 0xF8	; 248
     268:	98 31       	cpi	r25, 0x18	; 24
     26a:	e1 f7       	brne	.-8      	; 0x264 <twi_read+0x36>

	TWDR = address; 			 //register address
     26c:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1<<TWINT)|(1<<TWEN); //전송
     270:	84 e8       	ldi	r24, 0x84	; 132
     272:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

	while(!(TWCR & (1<<TWINT)));
     276:	e4 e7       	ldi	r30, 0x74	; 116
     278:	f0 e0       	ldi	r31, 0x00	; 0
     27a:	80 81       	ld	r24, Z
     27c:	88 23       	and	r24, r24
     27e:	ec f7       	brge	.-6      	; 0x27a <twi_read+0x4c>
	while((TWSR&0xF8) != 0x28);  //Data ACK 상태(28) 기다림 
     280:	e1 e7       	ldi	r30, 0x71	; 113
     282:	f0 e0       	ldi	r31, 0x00	; 0
     284:	80 81       	ld	r24, Z
     286:	88 7f       	andi	r24, 0xF8	; 248
     288:	88 32       	cpi	r24, 0x28	; 40
     28a:	e1 f7       	brne	.-8      	; 0x284 <twi_read+0x56>

	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);	//Repeat START
     28c:	84 ea       	ldi	r24, 0xA4	; 164
     28e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

	while(!(TWCR & (1<<TWINT)));
     292:	e4 e7       	ldi	r30, 0x74	; 116
     294:	f0 e0       	ldi	r31, 0x00	; 0
     296:	80 81       	ld	r24, Z
     298:	88 23       	and	r24, r24
     29a:	ec f7       	brge	.-6      	; 0x296 <twi_read+0x68>
	while((TWSR&0xF8) != 0x10);  //Repeat START 상태(08) 기다림
     29c:	e1 e7       	ldi	r30, 0x71	; 113
     29e:	f0 e0       	ldi	r31, 0x00	; 0
     2a0:	80 81       	ld	r24, Z
     2a2:	88 7f       	andi	r24, 0xF8	; 248
     2a4:	80 31       	cpi	r24, 0x10	; 16
     2a6:	e1 f7       	brne	.-8      	; 0x2a0 <twi_read+0x72>

	TWDR = 0b11010001;			 //AD(1101000)+R(1) 
     2a8:	81 ed       	ldi	r24, 0xD1	; 209
     2aa:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1<<TWINT)|(1<<TWEN); //전송 
     2ae:	84 e8       	ldi	r24, 0x84	; 132
     2b0:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

	while(!(TWCR & (1<<TWINT)));
     2b4:	e4 e7       	ldi	r30, 0x74	; 116
     2b6:	f0 e0       	ldi	r31, 0x00	; 0
     2b8:	80 81       	ld	r24, Z
     2ba:	88 23       	and	r24, r24
     2bc:	ec f7       	brge	.-6      	; 0x2b8 <twi_read+0x8a>
	while((TWSR&0xF8) != 0x40);  //SLA+R ACK 상태(40) 기다림 
     2be:	e1 e7       	ldi	r30, 0x71	; 113
     2c0:	f0 e0       	ldi	r31, 0x00	; 0
     2c2:	80 81       	ld	r24, Z
     2c4:	88 7f       	andi	r24, 0xF8	; 248
     2c6:	80 34       	cpi	r24, 0x40	; 64
     2c8:	e1 f7       	brne	.-8      	; 0x2c2 <twi_read+0x94>

	TWCR = (1<<TWINT)|(1<<TWEN); //전송
     2ca:	84 e8       	ldi	r24, 0x84	; 132
     2cc:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

	while(!(TWCR & (1<<TWINT)));
     2d0:	e4 e7       	ldi	r30, 0x74	; 116
     2d2:	f0 e0       	ldi	r31, 0x00	; 0
     2d4:	80 81       	ld	r24, Z
     2d6:	88 23       	and	r24, r24
     2d8:	ec f7       	brge	.-6      	; 0x2d4 <twi_read+0xa6>
	while((TWSR&0xF8) != 0x58);  //ACK 상태(58) 기다림 
     2da:	e1 e7       	ldi	r30, 0x71	; 113
     2dc:	f0 e0       	ldi	r31, 0x00	; 0
     2de:	80 81       	ld	r24, Z
     2e0:	88 7f       	andi	r24, 0xF8	; 248
     2e2:	88 35       	cpi	r24, 0x58	; 88
     2e4:	e1 f7       	brne	.-8      	; 0x2de <twi_read+0xb0>

	data = TWDR; 
     2e6:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>

	TWCR = (1<<TWINT)|(1<<TWSTO)|(1<<TWEN); //STOP
     2ea:	94 e9       	ldi	r25, 0x94	; 148
     2ec:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

	return data; 
}
     2f0:	08 95       	ret

000002f2 <get_raw_data>:
}


void get_raw_data()
{
	a_x_h = twi_read(0x3B);		//x축 가속도
     2f2:	8b e3       	ldi	r24, 0x3B	; 59
     2f4:	9c df       	rcall	.-200    	; 0x22e <twi_read>
     2f6:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <a_x_h>
	a_x_l = twi_read(0x3C);
     2fa:	8c e3       	ldi	r24, 0x3C	; 60
     2fc:	98 df       	rcall	.-208    	; 0x22e <twi_read>
     2fe:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <a_x_l>
	a_y_h = twi_read(0x3D);		//y축 가속도 
     302:	8d e3       	ldi	r24, 0x3D	; 61
     304:	94 df       	rcall	.-216    	; 0x22e <twi_read>
     306:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <a_y_h>
	a_y_l = twi_read(0x3E);		
     30a:	8e e3       	ldi	r24, 0x3E	; 62
     30c:	90 df       	rcall	.-224    	; 0x22e <twi_read>
     30e:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <a_y_l>
	a_z_h = twi_read(0x3F);		//z축 가속도 
     312:	8f e3       	ldi	r24, 0x3F	; 63
     314:	8c df       	rcall	.-232    	; 0x22e <twi_read>
     316:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <a_z_h>
	a_z_l = twi_read(0x40);		
     31a:	80 e4       	ldi	r24, 0x40	; 64
     31c:	88 df       	rcall	.-240    	; 0x22e <twi_read>
     31e:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <a_z_l>
	g_x_h = twi_read(0x43);		//x축 각속도 
     322:	83 e4       	ldi	r24, 0x43	; 67
     324:	84 df       	rcall	.-248    	; 0x22e <twi_read>
     326:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <g_x_h>
	g_x_l = twi_read(0x44);		
     32a:	84 e4       	ldi	r24, 0x44	; 68
     32c:	80 df       	rcall	.-256    	; 0x22e <twi_read>
     32e:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <g_x_l>
	g_y_h = twi_read(0x45);		//y축 각속도 
     332:	85 e4       	ldi	r24, 0x45	; 69
     334:	7c df       	rcall	.-264    	; 0x22e <twi_read>
     336:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <g_y_h>
	g_y_l = twi_read(0x46);		
     33a:	86 e4       	ldi	r24, 0x46	; 70
     33c:	78 df       	rcall	.-272    	; 0x22e <twi_read>
     33e:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <g_y_l>
	g_z_h = twi_read(0x47);		//z축 각속도 
     342:	87 e4       	ldi	r24, 0x47	; 71
     344:	74 df       	rcall	.-280    	; 0x22e <twi_read>
     346:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <g_z_h>
     34a:	88 e4       	ldi	r24, 0x48	; 72
	g_z_l = twi_read(0x48);		
     34c:	70 df       	rcall	.-288    	; 0x22e <twi_read>
     34e:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <g_z_l>
     352:	08 95       	ret

00000354 <calibrate>:
     354:	4f 92       	push	r4
     356:	5f 92       	push	r5
	alpha = (100-fabs(data))/100;
}


void calibrate()	//초기값 읽기 
{	
     358:	6f 92       	push	r6
     35a:	7f 92       	push	r7
     35c:	8f 92       	push	r8
     35e:	9f 92       	push	r9
     360:	af 92       	push	r10
     362:	bf 92       	push	r11
     364:	cf 92       	push	r12
     366:	df 92       	push	r13
     368:	ef 92       	push	r14
     36a:	ff 92       	push	r15
     36c:	cf 93       	push	r28
     36e:	df 93       	push	r29
     370:	00 d0       	rcall	.+0      	; 0x372 <calibrate+0x1e>
     372:	00 d0       	rcall	.+0      	; 0x374 <calibrate+0x20>
     374:	cd b7       	in	r28, 0x3d	; 61
     376:	de b7       	in	r29, 0x3e	; 62
     378:	84 e1       	ldi	r24, 0x14	; 20
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	9a 83       	std	Y+2, r25	; 0x02
     37e:	89 83       	std	Y+1, r24	; 0x01
	int cal = 20;
	//DDRA=0xff;
	for(int i=0; i<cal; i++)	//평균 
	{
		get_raw_data();
     380:	b8 df       	rcall	.-144    	; 0x2f2 <get_raw_data>
	
		temp = (a_x_h<<8) | a_x_l;
     382:	20 91 49 01 	lds	r18, 0x0149	; 0x800149 <a_x_h>
     386:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <a_x_l>
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	92 2b       	or	r25, r18
     38e:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <temp+0x1>
     392:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <temp>
		a_x += - temp /*- 16383*/; // 10월 20일
     396:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <temp>
     39a:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <temp+0x1>
     39e:	c0 90 27 01 	lds	r12, 0x0127	; 0x800127 <a_x>
     3a2:	d0 90 28 01 	lds	r13, 0x0128	; 0x800128 <a_x+0x1>
     3a6:	e0 90 29 01 	lds	r14, 0x0129	; 0x800129 <a_x+0x2>
     3aa:	f0 90 2a 01 	lds	r15, 0x012A	; 0x80012a <a_x+0x3>
     3ae:	71 95       	neg	r23
     3b0:	61 95       	neg	r22
     3b2:	71 09       	sbc	r23, r1
     3b4:	07 2e       	mov	r0, r23
     3b6:	00 0c       	add	r0, r0
     3b8:	88 0b       	sbc	r24, r24
     3ba:	99 0b       	sbc	r25, r25
     3bc:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__floatsisf>
     3c0:	a7 01       	movw	r20, r14
     3c2:	96 01       	movw	r18, r12
     3c4:	69 d7       	rcall	.+3794   	; 0x1298 <__addsf3>
     3c6:	60 93 27 01 	sts	0x0127, r22	; 0x800127 <a_x>
     3ca:	70 93 28 01 	sts	0x0128, r23	; 0x800128 <a_x+0x1>
     3ce:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <a_x+0x2>
     3d2:	90 93 2a 01 	sts	0x012A, r25	; 0x80012a <a_x+0x3>
		temp = (a_y_h<<8) | a_y_l;
     3d6:	20 91 91 01 	lds	r18, 0x0191	; 0x800191 <a_y_h>
     3da:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <a_y_l>
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	92 2b       	or	r25, r18
     3e2:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <temp+0x1>
     3e6:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <temp>
		a_y += - temp;
     3ea:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <temp>
     3ee:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <temp+0x1>
     3f2:	c0 90 08 01 	lds	r12, 0x0108	; 0x800108 <a_y>
     3f6:	d0 90 09 01 	lds	r13, 0x0109	; 0x800109 <a_y+0x1>
     3fa:	e0 90 0a 01 	lds	r14, 0x010A	; 0x80010a <a_y+0x2>
     3fe:	f0 90 0b 01 	lds	r15, 0x010B	; 0x80010b <a_y+0x3>
     402:	71 95       	neg	r23
     404:	61 95       	neg	r22
     406:	71 09       	sbc	r23, r1
     408:	07 2e       	mov	r0, r23
     40a:	00 0c       	add	r0, r0
     40c:	88 0b       	sbc	r24, r24
     40e:	99 0b       	sbc	r25, r25
     410:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__floatsisf>
     414:	a7 01       	movw	r20, r14
     416:	96 01       	movw	r18, r12
     418:	3f d7       	rcall	.+3710   	; 0x1298 <__addsf3>
     41a:	60 93 08 01 	sts	0x0108, r22	; 0x800108 <a_y>
     41e:	70 93 09 01 	sts	0x0109, r23	; 0x800109 <a_y+0x1>
     422:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <a_y+0x2>
     426:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <a_y+0x3>
		temp = (a_z_h<<8) | a_z_l;
     42a:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <a_z_h>
     42e:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <a_z_l>
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	92 2b       	or	r25, r18
     436:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <temp+0x1>
     43a:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <temp>
		a_z += temp;
     43e:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <temp>
     442:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <temp+0x1>
     446:	c0 90 3b 01 	lds	r12, 0x013B	; 0x80013b <a_z>
     44a:	d0 90 3c 01 	lds	r13, 0x013C	; 0x80013c <a_z+0x1>
     44e:	e0 90 3d 01 	lds	r14, 0x013D	; 0x80013d <a_z+0x2>
     452:	f0 90 3e 01 	lds	r15, 0x013E	; 0x80013e <a_z+0x3>
     456:	07 2e       	mov	r0, r23
     458:	00 0c       	add	r0, r0
     45a:	88 0b       	sbc	r24, r24
     45c:	99 0b       	sbc	r25, r25
     45e:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__floatsisf>
     462:	a7 01       	movw	r20, r14
     464:	96 01       	movw	r18, r12
     466:	18 d7       	rcall	.+3632   	; 0x1298 <__addsf3>
     468:	60 93 3b 01 	sts	0x013B, r22	; 0x80013b <a_z>
     46c:	70 93 3c 01 	sts	0x013C, r23	; 0x80013c <a_z+0x1>
     470:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <a_z+0x2>
     474:	90 93 3e 01 	sts	0x013E, r25	; 0x80013e <a_z+0x3>
		temp = (g_x_h<<8) | g_x_l;
     478:	20 91 66 01 	lds	r18, 0x0166	; 0x800166 <g_x_h>
     47c:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <g_x_l>
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	92 2b       	or	r25, r18
     484:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <temp+0x1>
     488:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <temp>
		g_x += temp;
     48c:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <temp>
     490:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <temp+0x1>
     494:	c0 90 10 01 	lds	r12, 0x0110	; 0x800110 <g_x>
     498:	d0 90 11 01 	lds	r13, 0x0111	; 0x800111 <g_x+0x1>
     49c:	e0 90 12 01 	lds	r14, 0x0112	; 0x800112 <g_x+0x2>
     4a0:	f0 90 13 01 	lds	r15, 0x0113	; 0x800113 <g_x+0x3>
     4a4:	07 2e       	mov	r0, r23
     4a6:	00 0c       	add	r0, r0
     4a8:	88 0b       	sbc	r24, r24
     4aa:	99 0b       	sbc	r25, r25
     4ac:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__floatsisf>
     4b0:	a7 01       	movw	r20, r14
     4b2:	96 01       	movw	r18, r12
     4b4:	f1 d6       	rcall	.+3554   	; 0x1298 <__addsf3>
     4b6:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <g_x>
     4ba:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <g_x+0x1>
     4be:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <g_x+0x2>
     4c2:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <g_x+0x3>
		temp = (g_y_h<<8) | g_y_l;
     4c6:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <g_y_h>
     4ca:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <g_y_l>
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	92 2b       	or	r25, r18
     4d2:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <temp+0x1>
     4d6:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <temp>
		g_y += temp;
     4da:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <temp>
     4de:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <temp+0x1>
     4e2:	c0 90 88 01 	lds	r12, 0x0188	; 0x800188 <g_y>
     4e6:	d0 90 89 01 	lds	r13, 0x0189	; 0x800189 <g_y+0x1>
     4ea:	e0 90 8a 01 	lds	r14, 0x018A	; 0x80018a <g_y+0x2>
     4ee:	f0 90 8b 01 	lds	r15, 0x018B	; 0x80018b <g_y+0x3>
     4f2:	07 2e       	mov	r0, r23
     4f4:	00 0c       	add	r0, r0
     4f6:	88 0b       	sbc	r24, r24
     4f8:	99 0b       	sbc	r25, r25
     4fa:	fc d7       	rcall	.+4088   	; 0x14f4 <__floatsisf>
     4fc:	a7 01       	movw	r20, r14
     4fe:	96 01       	movw	r18, r12
     500:	cb d6       	rcall	.+3478   	; 0x1298 <__addsf3>
     502:	60 93 88 01 	sts	0x0188, r22	; 0x800188 <g_y>
     506:	70 93 89 01 	sts	0x0189, r23	; 0x800189 <g_y+0x1>
     50a:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <g_y+0x2>
     50e:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <g_y+0x3>
		temp = (g_z_h<<8) | g_z_l;
     512:	20 91 33 01 	lds	r18, 0x0133	; 0x800133 <g_z_h>
     516:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <g_z_l>
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	92 2b       	or	r25, r18
     51e:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <temp+0x1>
     522:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <temp>
		g_z += temp;
     526:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <temp>
     52a:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <temp+0x1>
     52e:	c0 90 37 01 	lds	r12, 0x0137	; 0x800137 <g_z>
     532:	d0 90 38 01 	lds	r13, 0x0138	; 0x800138 <g_z+0x1>
     536:	e0 90 39 01 	lds	r14, 0x0139	; 0x800139 <g_z+0x2>
     53a:	f0 90 3a 01 	lds	r15, 0x013A	; 0x80013a <g_z+0x3>
     53e:	07 2e       	mov	r0, r23
     540:	00 0c       	add	r0, r0
     542:	88 0b       	sbc	r24, r24
     544:	99 0b       	sbc	r25, r25
     546:	d6 d7       	rcall	.+4012   	; 0x14f4 <__floatsisf>
     548:	a7 01       	movw	r20, r14
     54a:	96 01       	movw	r18, r12
     54c:	a5 d6       	rcall	.+3402   	; 0x1298 <__addsf3>
     54e:	60 93 37 01 	sts	0x0137, r22	; 0x800137 <g_z>
     552:	70 93 38 01 	sts	0x0138, r23	; 0x800138 <g_z+0x1>
     556:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <g_z+0x2>
     55a:	90 93 3a 01 	sts	0x013A, r25	; 0x80013a <g_z+0x3>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     55e:	9f ef       	ldi	r25, 0xFF	; 255
     560:	21 ee       	ldi	r18, 0xE1	; 225
     562:	84 e0       	ldi	r24, 0x04	; 4
     564:	91 50       	subi	r25, 0x01	; 1
     566:	20 40       	sbci	r18, 0x00	; 0
     568:	80 40       	sbci	r24, 0x00	; 0
     56a:	e1 f7       	brne	.-8      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
     56c:	00 c0       	rjmp	.+0      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
     56e:	00 00       	nop
     570:	89 81       	ldd	r24, Y+1	; 0x01
     572:	9a 81       	ldd	r25, Y+2	; 0x02
     574:	01 97       	sbiw	r24, 0x01	; 1
     576:	9a 83       	std	Y+2, r25	; 0x02
     578:	89 83       	std	Y+1, r24	; 0x01

void calibrate()	//초기값 읽기 
{	
	int cal = 20;
	//DDRA=0xff;
	for(int i=0; i<cal; i++)	//평균 
     57a:	89 2b       	or	r24, r25
     57c:	09 f0       	breq	.+2      	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
     57e:	00 cf       	rjmp	.-512    	; 0x380 <calibrate+0x2c>
		temp = (g_z_h<<8) | g_z_l;
		g_z += temp;
		_delay_ms(100);
	}	
	
	a_x /= cal;
     580:	60 91 27 01 	lds	r22, 0x0127	; 0x800127 <a_x>
     584:	70 91 28 01 	lds	r23, 0x0128	; 0x800128 <a_x+0x1>
     588:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <a_x+0x2>
     58c:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <a_x+0x3>
     590:	20 e0       	ldi	r18, 0x00	; 0
     592:	30 e0       	ldi	r19, 0x00	; 0
     594:	40 ea       	ldi	r20, 0xA0	; 160
     596:	51 e4       	ldi	r21, 0x41	; 65
     598:	12 d7       	rcall	.+3620   	; 0x13be <__divsf3>
     59a:	60 93 27 01 	sts	0x0127, r22	; 0x800127 <a_x>
     59e:	70 93 28 01 	sts	0x0128, r23	; 0x800128 <a_x+0x1>
     5a2:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <a_x+0x2>
     5a6:	90 93 2a 01 	sts	0x012A, r25	; 0x80012a <a_x+0x3>
	a_y /= cal;
     5aa:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <a_y>
     5ae:	70 91 09 01 	lds	r23, 0x0109	; 0x800109 <a_y+0x1>
     5b2:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <a_y+0x2>
     5b6:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <a_y+0x3>
     5ba:	20 e0       	ldi	r18, 0x00	; 0
     5bc:	30 e0       	ldi	r19, 0x00	; 0
     5be:	40 ea       	ldi	r20, 0xA0	; 160
     5c0:	51 e4       	ldi	r21, 0x41	; 65
     5c2:	fd d6       	rcall	.+3578   	; 0x13be <__divsf3>
     5c4:	60 93 08 01 	sts	0x0108, r22	; 0x800108 <a_y>
     5c8:	70 93 09 01 	sts	0x0109, r23	; 0x800109 <a_y+0x1>
     5cc:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <a_y+0x2>
     5d0:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <a_y+0x3>
	a_z /= cal;
     5d4:	60 91 3b 01 	lds	r22, 0x013B	; 0x80013b <a_z>
     5d8:	70 91 3c 01 	lds	r23, 0x013C	; 0x80013c <a_z+0x1>
     5dc:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <a_z+0x2>
     5e0:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <a_z+0x3>
     5e4:	20 e0       	ldi	r18, 0x00	; 0
     5e6:	30 e0       	ldi	r19, 0x00	; 0
     5e8:	40 ea       	ldi	r20, 0xA0	; 160
     5ea:	51 e4       	ldi	r21, 0x41	; 65
     5ec:	e8 d6       	rcall	.+3536   	; 0x13be <__divsf3>
     5ee:	60 93 3b 01 	sts	0x013B, r22	; 0x80013b <a_z>
     5f2:	70 93 3c 01 	sts	0x013C, r23	; 0x80013c <a_z+0x1>
     5f6:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <a_z+0x2>
     5fa:	90 93 3e 01 	sts	0x013E, r25	; 0x80013e <a_z+0x3>
	g_x /= cal;
     5fe:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <g_x>
     602:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <g_x+0x1>
     606:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <g_x+0x2>
     60a:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <g_x+0x3>
     60e:	20 e0       	ldi	r18, 0x00	; 0
     610:	30 e0       	ldi	r19, 0x00	; 0
     612:	40 ea       	ldi	r20, 0xA0	; 160
     614:	51 e4       	ldi	r21, 0x41	; 65
     616:	d3 d6       	rcall	.+3494   	; 0x13be <__divsf3>
     618:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <g_x>
     61c:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <g_x+0x1>
     620:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <g_x+0x2>
     624:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <g_x+0x3>
	g_y /= cal;
     628:	60 91 88 01 	lds	r22, 0x0188	; 0x800188 <g_y>
     62c:	70 91 89 01 	lds	r23, 0x0189	; 0x800189 <g_y+0x1>
     630:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <g_y+0x2>
     634:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <g_y+0x3>
     638:	20 e0       	ldi	r18, 0x00	; 0
     63a:	30 e0       	ldi	r19, 0x00	; 0
     63c:	40 ea       	ldi	r20, 0xA0	; 160
     63e:	51 e4       	ldi	r21, 0x41	; 65
     640:	be d6       	rcall	.+3452   	; 0x13be <__divsf3>
     642:	60 93 88 01 	sts	0x0188, r22	; 0x800188 <g_y>
     646:	70 93 89 01 	sts	0x0189, r23	; 0x800189 <g_y+0x1>
     64a:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <g_y+0x2>
     64e:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <g_y+0x3>
	g_z /= cal;
     652:	60 91 37 01 	lds	r22, 0x0137	; 0x800137 <g_z>
     656:	70 91 38 01 	lds	r23, 0x0138	; 0x800138 <g_z+0x1>
     65a:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <g_z+0x2>
     65e:	90 91 3a 01 	lds	r25, 0x013A	; 0x80013a <g_z+0x3>
     662:	20 e0       	ldi	r18, 0x00	; 0
     664:	30 e0       	ldi	r19, 0x00	; 0
     666:	40 ea       	ldi	r20, 0xA0	; 160
     668:	51 e4       	ldi	r21, 0x41	; 65
     66a:	a9 d6       	rcall	.+3410   	; 0x13be <__divsf3>
     66c:	60 93 37 01 	sts	0x0137, r22	; 0x800137 <g_z>
     670:	70 93 38 01 	sts	0x0138, r23	; 0x800138 <g_z+0x1>
     674:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <g_z+0x2>
     678:	90 93 3a 01 	sts	0x013A, r25	; 0x80013a <g_z+0x3>

	bas_a_x = a_x;	//초기 값으로 저장 
     67c:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <a_x>
     680:	90 91 28 01 	lds	r25, 0x0128	; 0x800128 <a_x+0x1>
     684:	a0 91 29 01 	lds	r26, 0x0129	; 0x800129 <a_x+0x2>
     688:	b0 91 2a 01 	lds	r27, 0x012A	; 0x80012a <a_x+0x3>
     68c:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <bas_a_x>
     690:	90 93 30 01 	sts	0x0130, r25	; 0x800130 <bas_a_x+0x1>
     694:	a0 93 31 01 	sts	0x0131, r26	; 0x800131 <bas_a_x+0x2>
     698:	b0 93 32 01 	sts	0x0132, r27	; 0x800132 <bas_a_x+0x3>
	bas_a_y = a_y;
     69c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <a_y>
     6a0:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <a_y+0x1>
     6a4:	a0 91 0a 01 	lds	r26, 0x010A	; 0x80010a <a_y+0x2>
     6a8:	b0 91 0b 01 	lds	r27, 0x010B	; 0x80010b <a_y+0x3>
     6ac:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <bas_a_y>
     6b0:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <bas_a_y+0x1>
     6b4:	a0 93 1c 01 	sts	0x011C, r26	; 0x80011c <bas_a_y+0x2>
     6b8:	b0 93 1d 01 	sts	0x011D, r27	; 0x80011d <bas_a_y+0x3>
	bas_a_z = a_z;
     6bc:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <a_z>
     6c0:	90 91 3c 01 	lds	r25, 0x013C	; 0x80013c <a_z+0x1>
     6c4:	a0 91 3d 01 	lds	r26, 0x013D	; 0x80013d <a_z+0x2>
     6c8:	b0 91 3e 01 	lds	r27, 0x013E	; 0x80013e <a_z+0x3>
     6cc:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <bas_a_z>
     6d0:	90 93 81 01 	sts	0x0181, r25	; 0x800181 <bas_a_z+0x1>
     6d4:	a0 93 82 01 	sts	0x0182, r26	; 0x800182 <bas_a_z+0x2>
     6d8:	b0 93 83 01 	sts	0x0183, r27	; 0x800183 <bas_a_z+0x3>
	bas_g_x = g_x;
     6dc:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <g_x>
     6e0:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <g_x+0x1>
     6e4:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <g_x+0x2>
     6e8:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <g_x+0x3>
     6ec:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <bas_g_x>
     6f0:	90 93 2c 01 	sts	0x012C, r25	; 0x80012c <bas_g_x+0x1>
     6f4:	a0 93 2d 01 	sts	0x012D, r26	; 0x80012d <bas_g_x+0x2>
     6f8:	b0 93 2e 01 	sts	0x012E, r27	; 0x80012e <bas_g_x+0x3>
	bas_g_y = g_y;
     6fc:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <g_y>
     700:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <g_y+0x1>
     704:	a0 91 8a 01 	lds	r26, 0x018A	; 0x80018a <g_y+0x2>
     708:	b0 91 8b 01 	lds	r27, 0x018B	; 0x80018b <g_y+0x3>
     70c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <bas_g_y>
     710:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <bas_g_y+0x1>
     714:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <bas_g_y+0x2>
     718:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <bas_g_y+0x3>
	bas_g_z = g_z;
     71c:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <g_z>
     720:	90 91 38 01 	lds	r25, 0x0138	; 0x800138 <g_z+0x1>
     724:	a0 91 39 01 	lds	r26, 0x0139	; 0x800139 <g_z+0x2>
     728:	b0 91 3a 01 	lds	r27, 0x013A	; 0x80013a <g_z+0x3>
     72c:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <bas_g_z>
     730:	90 93 40 01 	sts	0x0140, r25	; 0x800140 <bas_g_z+0x1>
     734:	a0 93 41 01 	sts	0x0141, r26	; 0x800141 <bas_g_z+0x2>
     738:	b0 93 42 01 	sts	0x0142, r27	; 0x800142 <bas_g_z+0x3>
	gravity=sqrt(pow(a_x,2) +pow(a_y,2)+ pow(a_z,2));
     73c:	c0 90 27 01 	lds	r12, 0x0127	; 0x800127 <a_x>
     740:	d0 90 28 01 	lds	r13, 0x0128	; 0x800128 <a_x+0x1>
     744:	e0 90 29 01 	lds	r14, 0x0129	; 0x800129 <a_x+0x2>
     748:	f0 90 2a 01 	lds	r15, 0x012A	; 0x80012a <a_x+0x3>
     74c:	80 90 08 01 	lds	r8, 0x0108	; 0x800108 <a_y>
     750:	90 90 09 01 	lds	r9, 0x0109	; 0x800109 <a_y+0x1>
     754:	a0 90 0a 01 	lds	r10, 0x010A	; 0x80010a <a_y+0x2>
     758:	b0 90 0b 01 	lds	r11, 0x010B	; 0x80010b <a_y+0x3>
     75c:	40 90 3b 01 	lds	r4, 0x013B	; 0x80013b <a_z>
     760:	50 90 3c 01 	lds	r5, 0x013C	; 0x80013c <a_z+0x1>
     764:	60 90 3d 01 	lds	r6, 0x013D	; 0x80013d <a_z+0x2>
     768:	70 90 3e 01 	lds	r7, 0x013E	; 0x80013e <a_z+0x3>
     76c:	a5 01       	movw	r20, r10
     76e:	94 01       	movw	r18, r8
     770:	c5 01       	movw	r24, r10
     772:	b4 01       	movw	r22, r8
     774:	d8 d7       	rcall	.+4016   	; 0x1726 <__mulsf3>
     776:	69 83       	std	Y+1, r22	; 0x01
     778:	7a 83       	std	Y+2, r23	; 0x02
     77a:	8b 83       	std	Y+3, r24	; 0x03
     77c:	9c 83       	std	Y+4, r25	; 0x04
     77e:	a7 01       	movw	r20, r14
     780:	96 01       	movw	r18, r12
     782:	c7 01       	movw	r24, r14
     784:	b6 01       	movw	r22, r12
     786:	cf d7       	rcall	.+3998   	; 0x1726 <__mulsf3>
     788:	9b 01       	movw	r18, r22
     78a:	ac 01       	movw	r20, r24
     78c:	69 81       	ldd	r22, Y+1	; 0x01
     78e:	7a 81       	ldd	r23, Y+2	; 0x02
     790:	8b 81       	ldd	r24, Y+3	; 0x03
     792:	9c 81       	ldd	r25, Y+4	; 0x04
     794:	81 d5       	rcall	.+2818   	; 0x1298 <__addsf3>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	a5 01       	movw	r20, r10
     7a0:	94 01       	movw	r18, r8
     7a2:	c5 01       	movw	r24, r10
     7a4:	b4 01       	movw	r22, r8
     7a6:	bf d7       	rcall	.+3966   	; 0x1726 <__mulsf3>
     7a8:	4b 01       	movw	r8, r22
     7aa:	5c 01       	movw	r10, r24
     7ac:	a7 01       	movw	r20, r14
     7ae:	96 01       	movw	r18, r12
     7b0:	c7 01       	movw	r24, r14
     7b2:	b6 01       	movw	r22, r12
     7b4:	b8 d7       	rcall	.+3952   	; 0x1726 <__mulsf3>
     7b6:	9b 01       	movw	r18, r22
     7b8:	ac 01       	movw	r20, r24
     7ba:	c5 01       	movw	r24, r10
     7bc:	b4 01       	movw	r22, r8
     7be:	6c d5       	rcall	.+2776   	; 0x1298 <__addsf3>
     7c0:	6b 01       	movw	r12, r22
     7c2:	7c 01       	movw	r14, r24
     7c4:	a3 01       	movw	r20, r6
     7c6:	92 01       	movw	r18, r4
     7c8:	c3 01       	movw	r24, r6
     7ca:	b2 01       	movw	r22, r4
     7cc:	ac d7       	rcall	.+3928   	; 0x1726 <__mulsf3>
     7ce:	9b 01       	movw	r18, r22
     7d0:	ac 01       	movw	r20, r24
     7d2:	c7 01       	movw	r24, r14
     7d4:	b6 01       	movw	r22, r12
     7d6:	60 d5       	rcall	.+2752   	; 0x1298 <__addsf3>
     7d8:	0e 94 00 0c 	call	0x1800	; 0x1800 <sqrt>
     7dc:	60 93 15 01 	sts	0x0115, r22	; 0x800115 <gravity>
     7e0:	70 93 16 01 	sts	0x0116, r23	; 0x800116 <gravity+0x1>
     7e4:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <gravity+0x2>
     7e8:	90 93 18 01 	sts	0x0118, r25	; 0x800118 <gravity+0x3>


}
     7ec:	0f 90       	pop	r0
     7ee:	0f 90       	pop	r0
     7f0:	0f 90       	pop	r0
     7f2:	0f 90       	pop	r0
     7f4:	df 91       	pop	r29
     7f6:	cf 91       	pop	r28
     7f8:	ff 90       	pop	r15
     7fa:	ef 90       	pop	r14
     7fc:	df 90       	pop	r13
     7fe:	cf 90       	pop	r12
     800:	bf 90       	pop	r11
     802:	af 90       	pop	r10
     804:	9f 90       	pop	r9
     806:	8f 90       	pop	r8
     808:	7f 90       	pop	r7
     80a:	6f 90       	pop	r6
     80c:	5f 90       	pop	r5
     80e:	4f 90       	pop	r4
     810:	08 95       	ret

00000812 <USART_Transmit>:



void USART_Transmit(unsigned char tx_data)
{ 
	while(!(UCSR0A & (1<<UDRE0)));
     812:	5d 9b       	sbis	0x0b, 5	; 11
     814:	fe cf       	rjmp	.-4      	; 0x812 <USART_Transmit>
	UDR0 = tx_data; 
     816:	8c b9       	out	0x0c, r24	; 12
     818:	08 95       	ret

0000081a <USART_Transmit_init4>:
}


void USART_Transmit_init4(int data)
{
     81a:	ef 92       	push	r14
     81c:	ff 92       	push	r15
     81e:	0f 93       	push	r16
     820:	1f 93       	push	r17
     822:	cf 93       	push	r28
     824:	df 93       	push	r29
     826:	ec 01       	movw	r28, r24
	if(data < 0)
     828:	99 23       	and	r25, r25
     82a:	34 f4       	brge	.+12     	; 0x838 <USART_Transmit_init4+0x1e>
	{
		data = -data;
     82c:	d1 95       	neg	r29
     82e:	c1 95       	neg	r28
     830:	d1 09       	sbc	r29, r1
		USART_Transmit('-');
     832:	8d e2       	ldi	r24, 0x2D	; 45
     834:	ee df       	rcall	.-36     	; 0x812 <USART_Transmit>
     836:	02 c0       	rjmp	.+4      	; 0x83c <USART_Transmit_init4+0x22>
	}
	else
		USART_Transmit(' ');
     838:	80 e2       	ldi	r24, 0x20	; 32
     83a:	eb df       	rcall	.-42     	; 0x812 <USART_Transmit>

	int temp = 0;
	temp = data/10000;
	USART_Transmit(temp+48);
     83c:	ce 01       	movw	r24, r28
     83e:	60 e1       	ldi	r22, 0x10	; 16
     840:	77 e2       	ldi	r23, 0x27	; 39
     842:	0e 94 67 0c 	call	0x18ce	; 0x18ce <__divmodhi4>
     846:	7c 01       	movw	r14, r24
     848:	80 e3       	ldi	r24, 0x30	; 48
     84a:	86 0f       	add	r24, r22
     84c:	e2 df       	rcall	.-60     	; 0x812 <USART_Transmit>
	temp = (data%10000)/1000;
	USART_Transmit(temp+48);
     84e:	08 ee       	ldi	r16, 0xE8	; 232
     850:	13 e0       	ldi	r17, 0x03	; 3
     852:	c7 01       	movw	r24, r14
     854:	b8 01       	movw	r22, r16
     856:	0e 94 67 0c 	call	0x18ce	; 0x18ce <__divmodhi4>
     85a:	80 e3       	ldi	r24, 0x30	; 48
     85c:	86 0f       	add	r24, r22
     85e:	d9 df       	rcall	.-78     	; 0x812 <USART_Transmit>
	temp = (data%1000)/100;
	USART_Transmit(temp+48);
     860:	ce 01       	movw	r24, r28
     862:	b8 01       	movw	r22, r16
     864:	0e 94 67 0c 	call	0x18ce	; 0x18ce <__divmodhi4>
     868:	04 e6       	ldi	r16, 0x64	; 100
     86a:	10 e0       	ldi	r17, 0x00	; 0
     86c:	b8 01       	movw	r22, r16
     86e:	0e 94 67 0c 	call	0x18ce	; 0x18ce <__divmodhi4>
     872:	80 e3       	ldi	r24, 0x30	; 48
     874:	86 0f       	add	r24, r22
     876:	cd df       	rcall	.-102    	; 0x812 <USART_Transmit>
	temp = (data%100)/10;	
	USART_Transmit(temp+48);
     878:	ce 01       	movw	r24, r28
     87a:	b8 01       	movw	r22, r16
     87c:	0e 94 67 0c 	call	0x18ce	; 0x18ce <__divmodhi4>
     880:	0a e0       	ldi	r16, 0x0A	; 10
     882:	10 e0       	ldi	r17, 0x00	; 0
     884:	b8 01       	movw	r22, r16
     886:	0e 94 67 0c 	call	0x18ce	; 0x18ce <__divmodhi4>
     88a:	80 e3       	ldi	r24, 0x30	; 48
     88c:	86 0f       	add	r24, r22
     88e:	c1 df       	rcall	.-126    	; 0x812 <USART_Transmit>
	temp = data%10; 
	USART_Transmit(temp+48);
     890:	ce 01       	movw	r24, r28
     892:	b8 01       	movw	r22, r16
     894:	0e 94 67 0c 	call	0x18ce	; 0x18ce <__divmodhi4>
     898:	80 5d       	subi	r24, 0xD0	; 208
     89a:	bb df       	rcall	.-138    	; 0x812 <USART_Transmit>
     89c:	df 91       	pop	r29
}
     89e:	cf 91       	pop	r28
     8a0:	1f 91       	pop	r17
     8a2:	0f 91       	pop	r16
     8a4:	ff 90       	pop	r15
     8a6:	ef 90       	pop	r14
     8a8:	08 95       	ret

000008aa <main>:
     8aa:	cf 93       	push	r28
volatile double g_x_temp;



int main()
{  
     8ac:	df 93       	push	r29
     8ae:	00 d0       	rcall	.+0      	; 0x8b0 <main+0x6>
     8b0:	00 d0       	rcall	.+0      	; 0x8b2 <main+0x8>
     8b2:	cd b7       	in	r28, 0x3d	; 61
     8b4:	de b7       	in	r29, 0x3e	; 62

	DDRA=0xff;
     8b6:	8f ef       	ldi	r24, 0xFF	; 255
     8b8:	8a bb       	out	0x1a, r24	; 26
	DDRE=0b00011000;
     8ba:	88 e1       	ldi	r24, 0x18	; 24
     8bc:	82 b9       	out	0x02, r24	; 2
	//UART
	UCSR0A = 0x00;
     8be:	1b b8       	out	0x0b, r1	; 11
	UCSR0B = (1<<TXEN0); 
     8c0:	88 e0       	ldi	r24, 0x08	; 8
     8c2:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = (3<<UCSZ00);  
     8c4:	86 e0       	ldi	r24, 0x06	; 6
     8c6:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
	UBRR0H = 0;
     8ca:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 103;		//9600
     8ce:	97 e6       	ldi	r25, 0x67	; 103
     8d0:	99 b9       	out	0x09, r25	; 9

	//TWI(I2C)
	TWCR = (1<<TWEN);
     8d2:	94 e0       	ldi	r25, 0x04	; 4
     8d4:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	TWBR = 12;	 		//400khz
     8d8:	9c e0       	ldi	r25, 0x0C	; 12
     8da:	90 93 70 00 	sts	0x0070, r25	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>

	//TIMER0
	TCCR0 = (1<<CS02)|(1<<CS01);//256 분주 
     8de:	83 bf       	out	0x33, r24	; 51
	TCNT0 = 256-125;				//125 번 => 0.002s
     8e0:	83 e8       	ldi	r24, 0x83	; 131
     8e2:	82 bf       	out	0x32, r24	; 50
	TIMSK = (1<<TOIE0);
     8e4:	81 e0       	ldi	r24, 0x01	; 1
     8e6:	87 bf       	out	0x37, r24	; 55
	//TIMER3
	TCCR3A = (1<<COM3A1)|(0<<COM3A0)|(1<<COM3B1)|(0<<COM3B0)|(1<<WGM31);//0b10100010 pwm phase correct, 9-bit
     8e8:	82 ea       	ldi	r24, 0xA2	; 162
     8ea:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
	TCCR3B = (1<<WGM33)|(1<<WGM32)|(1<<CS31)|(1<<CS30);//0b00011011 64분주비
     8ee:	8b e1       	ldi	r24, 0x1B	; 27
     8f0:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	ICR3 = 4999; // ICR3 set to TOP
     8f4:	87 e8       	ldi	r24, 0x87	; 135
     8f6:	93 e1       	ldi	r25, 0x13	; 19
     8f8:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     8fc:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	OCR3A =150;
     900:	86 e9       	ldi	r24, 0x96	; 150
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     908:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	OCR3B =500; // 0 degree
     90c:	84 ef       	ldi	r24, 0xF4	; 244
     90e:	91 e0       	ldi	r25, 0x01	; 1
     910:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     914:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	TCNT3 = 0X00;
     918:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     91c:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	//MPU6050 init
	twi_write(0x6B, 0x00);
     920:	60 e0       	ldi	r22, 0x00	; 0
     922:	8b e6       	ldi	r24, 0x6B	; 107
     924:	41 dc       	rcall	.-1918   	; 0x1a8 <twi_write>
     926:	8f e9       	ldi	r24, 0x9F	; 159
     928:	9f e0       	ldi	r25, 0x0F	; 15
     92a:	01 97       	sbiw	r24, 0x01	; 1
     92c:	f1 f7       	brne	.-4      	; 0x92a <main+0x80>
     92e:	00 c0       	rjmp	.+0      	; 0x930 <main+0x86>
     930:	00 00       	nop
	_delay_ms(1);
	twi_write(0x1A, 0x05); 	//DLPF 10Hz
     932:	65 e0       	ldi	r22, 0x05	; 5
     934:	8a e1       	ldi	r24, 0x1A	; 26
	calibrate();
     936:	38 dc       	rcall	.-1936   	; 0x1a8 <twi_write>
     938:	0d dd       	rcall	.-1510   	; 0x354 <calibrate>
	///velocity_x=0;
	//velocity_y=0;
	

	sei();
     93a:	78 94       	sei
	//SREG = 0x80;
	g_x_temp= bas_g_x;
     93c:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <bas_g_x>
     940:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <bas_g_x+0x1>
     944:	a0 91 2d 01 	lds	r26, 0x012D	; 0x80012d <bas_g_x+0x2>
     948:	b0 91 2e 01 	lds	r27, 0x012E	; 0x80012e <bas_g_x+0x3>
     94c:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <g_x_temp>
     950:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <g_x_temp+0x1>
     954:	a0 93 64 01 	sts	0x0164, r26	; 0x800164 <g_x_temp+0x2>
     958:	b0 93 65 01 	sts	0x0165, r27	; 0x800165 <g_x_temp+0x3>
				M_COUNT=M_COUNT+1;
			}
			else
			{
				M_COUNT=0;
				OCR3A = 150;
     95c:	0f 2e       	mov	r0, r31
     95e:	f6 e9       	ldi	r31, 0x96	; 150
     960:	2f 2e       	mov	r2, r31
     962:	31 2c       	mov	r3, r1
				OCR3B = 500;
     964:	f0 2d       	mov	r31, r0
     966:	04 ef       	ldi	r16, 0xF4	; 244
	sei();
	//SREG = 0x80;
	g_x_temp= bas_g_x;
	while(1)
	{ 
		get_raw_data();
     968:	11 e0       	ldi	r17, 0x01	; 1
     96a:	c3 dc       	rcall	.-1658   	; 0x2f2 <get_raw_data>

		las_angle_gx = roll;	//최근값 누적
     96c:	80 91 6f 01 	lds	r24, 0x016F	; 0x80016f <roll>
     970:	90 91 70 01 	lds	r25, 0x0170	; 0x800170 <roll+0x1>
     974:	a0 91 71 01 	lds	r26, 0x0171	; 0x800171 <roll+0x2>
     978:	b0 91 72 01 	lds	r27, 0x0172	; 0x800172 <roll+0x3>
     97c:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <las_angle_gx>
     980:	90 93 24 01 	sts	0x0124, r25	; 0x800124 <las_angle_gx+0x1>
     984:	a0 93 25 01 	sts	0x0125, r26	; 0x800125 <las_angle_gx+0x2>
     988:	b0 93 26 01 	sts	0x0126, r27	; 0x800126 <las_angle_gx+0x3>
		las_angle_gy = pitch;
     98c:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <pitch>
     990:	90 91 6c 01 	lds	r25, 0x016C	; 0x80016c <pitch+0x1>
     994:	a0 91 6d 01 	lds	r26, 0x016D	; 0x80016d <pitch+0x2>
     998:	b0 91 6e 01 	lds	r27, 0x016E	; 0x80016e <pitch+0x3>
     99c:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <las_angle_gy>
     9a0:	90 93 78 01 	sts	0x0178, r25	; 0x800178 <las_angle_gy+0x1>
     9a4:	a0 93 79 01 	sts	0x0179, r26	; 0x800179 <las_angle_gy+0x2>
     9a8:	b0 93 7a 01 	sts	0x017A, r27	; 0x80017a <las_angle_gy+0x3>
		las_angle_gz = yaw;
     9ac:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <yaw>
     9b0:	90 91 68 01 	lds	r25, 0x0168	; 0x800168 <yaw+0x1>
     9b4:	a0 91 69 01 	lds	r26, 0x0169	; 0x800169 <yaw+0x2>
     9b8:	b0 91 6a 01 	lds	r27, 0x016A	; 0x80016a <yaw+0x3>
     9bc:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <las_angle_gz>
     9c0:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <las_angle_gz+0x1>
     9c4:	a0 93 50 01 	sts	0x0150, r26	; 0x800150 <las_angle_gz+0x2>
     9c8:	b0 93 51 01 	sts	0x0151, r27	; 0x800151 <las_angle_gz+0x3>

		temp = (a_x_h<<8) | a_x_l;
     9cc:	20 91 49 01 	lds	r18, 0x0149	; 0x800149 <a_x_h>
     9d0:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <a_x_l>
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	92 2b       	or	r25, r18
     9d8:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <temp+0x1>
     9dc:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <temp>
		a_x = -(temp);
     9e0:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <temp>
     9e4:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <temp+0x1>
     9e8:	71 95       	neg	r23
     9ea:	61 95       	neg	r22
     9ec:	71 09       	sbc	r23, r1
     9ee:	07 2e       	mov	r0, r23
     9f0:	00 0c       	add	r0, r0
     9f2:	88 0b       	sbc	r24, r24
     9f4:	99 0b       	sbc	r25, r25
     9f6:	7e d5       	rcall	.+2812   	; 0x14f4 <__floatsisf>
     9f8:	60 93 27 01 	sts	0x0127, r22	; 0x800127 <a_x>
     9fc:	70 93 28 01 	sts	0x0128, r23	; 0x800128 <a_x+0x1>
     a00:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <a_x+0x2>
     a04:	90 93 2a 01 	sts	0x012A, r25	; 0x80012a <a_x+0x3>
		temp = (a_y_h<<8) | a_y_l;
     a08:	20 91 91 01 	lds	r18, 0x0191	; 0x800191 <a_y_h>
     a0c:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <a_y_l>
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	92 2b       	or	r25, r18
     a14:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <temp+0x1>
     a18:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <temp>
		a_y = - (temp);
     a1c:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <temp>
     a20:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <temp+0x1>
     a24:	71 95       	neg	r23
     a26:	61 95       	neg	r22
     a28:	71 09       	sbc	r23, r1
     a2a:	07 2e       	mov	r0, r23
     a2c:	00 0c       	add	r0, r0
     a2e:	88 0b       	sbc	r24, r24
     a30:	99 0b       	sbc	r25, r25
     a32:	60 d5       	rcall	.+2752   	; 0x14f4 <__floatsisf>
     a34:	60 93 08 01 	sts	0x0108, r22	; 0x800108 <a_y>
     a38:	70 93 09 01 	sts	0x0109, r23	; 0x800109 <a_y+0x1>
     a3c:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <a_y+0x2>
     a40:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <a_y+0x3>
		temp = (a_z_h<<8) | a_z_l;
     a44:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <a_z_h>
     a48:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <a_z_l>
     a4c:	90 e0       	ldi	r25, 0x00	; 0
     a4e:	92 2b       	or	r25, r18
     a50:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <temp+0x1>
     a54:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <temp>
		a_z =(temp);
     a58:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <temp>
     a5c:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <temp+0x1>
     a60:	07 2e       	mov	r0, r23
     a62:	00 0c       	add	r0, r0
     a64:	88 0b       	sbc	r24, r24
     a66:	99 0b       	sbc	r25, r25
     a68:	45 d5       	rcall	.+2698   	; 0x14f4 <__floatsisf>
     a6a:	60 93 3b 01 	sts	0x013B, r22	; 0x80013b <a_z>
     a6e:	70 93 3c 01 	sts	0x013C, r23	; 0x80013c <a_z+0x1>
     a72:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <a_z+0x2>
     a76:	90 93 3e 01 	sts	0x013E, r25	; 0x80013e <a_z+0x3>
		temp = (g_x_h<<8) | g_x_l;
     a7a:	20 91 66 01 	lds	r18, 0x0166	; 0x800166 <g_x_h>
     a7e:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <g_x_l>
     a82:	90 e0       	ldi	r25, 0x00	; 0
     a84:	92 2b       	or	r25, r18
     a86:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <temp+0x1>
     a8a:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <temp>
		g_x = temp;
     a8e:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <temp>
     a92:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <temp+0x1>
     a96:	07 2e       	mov	r0, r23
     a98:	00 0c       	add	r0, r0
     a9a:	88 0b       	sbc	r24, r24
     a9c:	99 0b       	sbc	r25, r25
     a9e:	2a d5       	rcall	.+2644   	; 0x14f4 <__floatsisf>
     aa0:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <g_x>
     aa4:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <g_x+0x1>
     aa8:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <g_x+0x2>
     aac:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <g_x+0x3>
		temp = (g_y_h<<8) | g_y_l;
     ab0:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <g_y_h>
     ab4:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <g_y_l>
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	92 2b       	or	r25, r18
     abc:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <temp+0x1>
     ac0:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <temp>
		g_y = temp;
     ac4:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <temp>
     ac8:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <temp+0x1>
     acc:	07 2e       	mov	r0, r23
     ace:	00 0c       	add	r0, r0
     ad0:	88 0b       	sbc	r24, r24
     ad2:	99 0b       	sbc	r25, r25
     ad4:	0f d5       	rcall	.+2590   	; 0x14f4 <__floatsisf>
     ad6:	60 93 88 01 	sts	0x0188, r22	; 0x800188 <g_y>
     ada:	70 93 89 01 	sts	0x0189, r23	; 0x800189 <g_y+0x1>
     ade:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <g_y+0x2>
     ae2:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <g_y+0x3>
		temp = (g_z_h<<8) | g_z_l;
     ae6:	20 91 33 01 	lds	r18, 0x0133	; 0x800133 <g_z_h>
     aea:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <g_z_l>
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	92 2b       	or	r25, r18
     af2:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <temp+0x1>
     af6:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <temp>
		g_z = temp;
     afa:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <temp>
     afe:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <temp+0x1>
     b02:	07 2e       	mov	r0, r23
     b04:	00 0c       	add	r0, r0
     b06:	88 0b       	sbc	r24, r24
     b08:	99 0b       	sbc	r25, r25
     b0a:	f4 d4       	rcall	.+2536   	; 0x14f4 <__floatsisf>
     b0c:	60 93 37 01 	sts	0x0137, r22	; 0x800137 <g_z>
     b10:	70 93 38 01 	sts	0x0138, r23	; 0x800138 <g_z+0x1>
     b14:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <g_z+0x2>
     b18:	90 93 3a 01 	sts	0x013A, r25	; 0x80013a <g_z+0x3>
		g_x = (g_x - bas_g_x)/FS_SEL;
     b1c:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <g_x>
     b20:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <g_x+0x1>
     b24:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <g_x+0x2>
     b28:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <g_x+0x3>
     b2c:	20 91 2b 01 	lds	r18, 0x012B	; 0x80012b <bas_g_x>
     b30:	30 91 2c 01 	lds	r19, 0x012C	; 0x80012c <bas_g_x+0x1>
     b34:	40 91 2d 01 	lds	r20, 0x012D	; 0x80012d <bas_g_x+0x2>
     b38:	50 91 2e 01 	lds	r21, 0x012E	; 0x80012e <bas_g_x+0x3>
     b3c:	ac d3       	rcall	.+1880   	; 0x1296 <__subsf3>
     b3e:	20 e0       	ldi	r18, 0x00	; 0
     b40:	30 e0       	ldi	r19, 0x00	; 0
     b42:	43 e0       	ldi	r20, 0x03	; 3
     b44:	53 e4       	ldi	r21, 0x43	; 67
     b46:	3b d4       	rcall	.+2166   	; 0x13be <__divsf3>
     b48:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <g_x>
     b4c:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <g_x+0x1>
     b50:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <g_x+0x2>
     b54:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <g_x+0x3>
		g_y = (g_y - bas_g_y)/FS_SEL;
     b58:	60 91 88 01 	lds	r22, 0x0188	; 0x800188 <g_y>
     b5c:	70 91 89 01 	lds	r23, 0x0189	; 0x800189 <g_y+0x1>
     b60:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <g_y+0x2>
     b64:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <g_y+0x3>
     b68:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <bas_g_y>
     b6c:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <bas_g_y+0x1>
     b70:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <bas_g_y+0x2>
     b74:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <bas_g_y+0x3>
     b78:	8e d3       	rcall	.+1820   	; 0x1296 <__subsf3>
     b7a:	20 e0       	ldi	r18, 0x00	; 0
     b7c:	30 e0       	ldi	r19, 0x00	; 0
     b7e:	43 e0       	ldi	r20, 0x03	; 3
     b80:	53 e4       	ldi	r21, 0x43	; 67
     b82:	1d d4       	rcall	.+2106   	; 0x13be <__divsf3>
     b84:	60 93 88 01 	sts	0x0188, r22	; 0x800188 <g_y>
     b88:	70 93 89 01 	sts	0x0189, r23	; 0x800189 <g_y+0x1>
     b8c:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <g_y+0x2>
     b90:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <g_y+0x3>
		g_z = (g_z - bas_g_z)/FS_SEL;
     b94:	60 91 37 01 	lds	r22, 0x0137	; 0x800137 <g_z>
     b98:	70 91 38 01 	lds	r23, 0x0138	; 0x800138 <g_z+0x1>
     b9c:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <g_z+0x2>
     ba0:	90 91 3a 01 	lds	r25, 0x013A	; 0x80013a <g_z+0x3>
     ba4:	20 91 3f 01 	lds	r18, 0x013F	; 0x80013f <bas_g_z>
     ba8:	30 91 40 01 	lds	r19, 0x0140	; 0x800140 <bas_g_z+0x1>
     bac:	40 91 41 01 	lds	r20, 0x0141	; 0x800141 <bas_g_z+0x2>
     bb0:	50 91 42 01 	lds	r21, 0x0142	; 0x800142 <bas_g_z+0x3>
     bb4:	70 d3       	rcall	.+1760   	; 0x1296 <__subsf3>
     bb6:	20 e0       	ldi	r18, 0x00	; 0
     bb8:	30 e0       	ldi	r19, 0x00	; 0
     bba:	43 e0       	ldi	r20, 0x03	; 3
     bbc:	53 e4       	ldi	r21, 0x43	; 67
     bbe:	ff d3       	rcall	.+2046   	; 0x13be <__divsf3>
     bc0:	60 93 37 01 	sts	0x0137, r22	; 0x800137 <g_z>
     bc4:	70 93 38 01 	sts	0x0138, r23	; 0x800138 <g_z+0x1>
     bc8:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <g_z+0x2>
     bcc:	90 93 3a 01 	sts	0x013A, r25	; 0x80013a <g_z+0x3>
		
		
		angle_ax = atan(-1.000*a_y/sqrt(pow(a_x,2) + pow(a_z,2)))*180/3.141592;
     bd0:	40 90 08 01 	lds	r4, 0x0108	; 0x800108 <a_y>
     bd4:	50 90 09 01 	lds	r5, 0x0109	; 0x800109 <a_y+0x1>
     bd8:	60 90 0a 01 	lds	r6, 0x010A	; 0x80010a <a_y+0x2>
     bdc:	70 90 0b 01 	lds	r7, 0x010B	; 0x80010b <a_y+0x3>
     be0:	80 90 27 01 	lds	r8, 0x0127	; 0x800127 <a_x>
     be4:	90 90 28 01 	lds	r9, 0x0128	; 0x800128 <a_x+0x1>
     be8:	a0 90 29 01 	lds	r10, 0x0129	; 0x800129 <a_x+0x2>
     bec:	b0 90 2a 01 	lds	r11, 0x012A	; 0x80012a <a_x+0x3>
     bf0:	c0 90 3b 01 	lds	r12, 0x013B	; 0x80013b <a_z>
     bf4:	d0 90 3c 01 	lds	r13, 0x013C	; 0x80013c <a_z+0x1>
     bf8:	e0 90 3d 01 	lds	r14, 0x013D	; 0x80013d <a_z+0x2>
     bfc:	f0 90 3e 01 	lds	r15, 0x013E	; 0x80013e <a_z+0x3>
     c00:	a5 01       	movw	r20, r10
     c02:	94 01       	movw	r18, r8
     c04:	c5 01       	movw	r24, r10
     c06:	b4 01       	movw	r22, r8
     c08:	8e d5       	rcall	.+2844   	; 0x1726 <__mulsf3>
     c0a:	69 83       	std	Y+1, r22	; 0x01
     c0c:	7a 83       	std	Y+2, r23	; 0x02
     c0e:	8b 83       	std	Y+3, r24	; 0x03
     c10:	9c 83       	std	Y+4, r25	; 0x04
     c12:	a5 01       	movw	r20, r10
     c14:	94 01       	movw	r18, r8
     c16:	c5 01       	movw	r24, r10
     c18:	b4 01       	movw	r22, r8
     c1a:	85 d5       	rcall	.+2826   	; 0x1726 <__mulsf3>
     c1c:	4b 01       	movw	r8, r22
     c1e:	5c 01       	movw	r10, r24
     c20:	a7 01       	movw	r20, r14
     c22:	96 01       	movw	r18, r12
     c24:	c7 01       	movw	r24, r14
     c26:	b6 01       	movw	r22, r12
     c28:	7e d5       	rcall	.+2812   	; 0x1726 <__mulsf3>
     c2a:	9b 01       	movw	r18, r22
     c2c:	ac 01       	movw	r20, r24
     c2e:	c5 01       	movw	r24, r10
     c30:	b4 01       	movw	r22, r8
     c32:	32 d3       	rcall	.+1636   	; 0x1298 <__addsf3>
     c34:	e5 d5       	rcall	.+3018   	; 0x1800 <sqrt>
     c36:	9b 01       	movw	r18, r22
     c38:	ac 01       	movw	r20, r24
     c3a:	c3 01       	movw	r24, r6
     c3c:	b2 01       	movw	r22, r4
     c3e:	90 58       	subi	r25, 0x80	; 128
     c40:	be d3       	rcall	.+1916   	; 0x13be <__divsf3>
     c42:	8e d3       	rcall	.+1820   	; 0x1360 <atan>
     c44:	20 e0       	ldi	r18, 0x00	; 0
     c46:	30 e0       	ldi	r19, 0x00	; 0
     c48:	44 e3       	ldi	r20, 0x34	; 52
     c4a:	53 e4       	ldi	r21, 0x43	; 67
     c4c:	6c d5       	rcall	.+2776   	; 0x1726 <__mulsf3>
     c4e:	28 ed       	ldi	r18, 0xD8	; 216
     c50:	3f e0       	ldi	r19, 0x0F	; 15
     c52:	49 e4       	ldi	r20, 0x49	; 73
     c54:	50 e4       	ldi	r21, 0x40	; 64
     c56:	b3 d3       	rcall	.+1894   	; 0x13be <__divsf3>
     c58:	60 93 84 01 	sts	0x0184, r22	; 0x800184 <angle_ax>
     c5c:	70 93 85 01 	sts	0x0185, r23	; 0x800185 <angle_ax+0x1>
     c60:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <angle_ax+0x2>
     c64:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <angle_ax+0x3>
		angle_ay = atan(a_x/sqrt(pow(a_y,2) + pow(a_z,2)))*180/3.141592;
     c68:	40 90 27 01 	lds	r4, 0x0127	; 0x800127 <a_x>
     c6c:	50 90 28 01 	lds	r5, 0x0128	; 0x800128 <a_x+0x1>
     c70:	60 90 29 01 	lds	r6, 0x0129	; 0x800129 <a_x+0x2>
     c74:	70 90 2a 01 	lds	r7, 0x012A	; 0x80012a <a_x+0x3>
     c78:	80 90 08 01 	lds	r8, 0x0108	; 0x800108 <a_y>
     c7c:	90 90 09 01 	lds	r9, 0x0109	; 0x800109 <a_y+0x1>
     c80:	a0 90 0a 01 	lds	r10, 0x010A	; 0x80010a <a_y+0x2>
     c84:	b0 90 0b 01 	lds	r11, 0x010B	; 0x80010b <a_y+0x3>
     c88:	c0 90 3b 01 	lds	r12, 0x013B	; 0x80013b <a_z>
     c8c:	d0 90 3c 01 	lds	r13, 0x013C	; 0x80013c <a_z+0x1>
     c90:	e0 90 3d 01 	lds	r14, 0x013D	; 0x80013d <a_z+0x2>
     c94:	f0 90 3e 01 	lds	r15, 0x013E	; 0x80013e <a_z+0x3>
     c98:	a5 01       	movw	r20, r10
     c9a:	94 01       	movw	r18, r8
     c9c:	c5 01       	movw	r24, r10
     c9e:	b4 01       	movw	r22, r8
     ca0:	42 d5       	rcall	.+2692   	; 0x1726 <__mulsf3>
     ca2:	69 83       	std	Y+1, r22	; 0x01
     ca4:	7a 83       	std	Y+2, r23	; 0x02
     ca6:	8b 83       	std	Y+3, r24	; 0x03
     ca8:	9c 83       	std	Y+4, r25	; 0x04
     caa:	a5 01       	movw	r20, r10
     cac:	94 01       	movw	r18, r8
     cae:	c5 01       	movw	r24, r10
     cb0:	b4 01       	movw	r22, r8
     cb2:	39 d5       	rcall	.+2674   	; 0x1726 <__mulsf3>
     cb4:	4b 01       	movw	r8, r22
     cb6:	5c 01       	movw	r10, r24
     cb8:	a7 01       	movw	r20, r14
     cba:	96 01       	movw	r18, r12
     cbc:	c7 01       	movw	r24, r14
     cbe:	b6 01       	movw	r22, r12
     cc0:	32 d5       	rcall	.+2660   	; 0x1726 <__mulsf3>
     cc2:	9b 01       	movw	r18, r22
     cc4:	ac 01       	movw	r20, r24
     cc6:	c5 01       	movw	r24, r10
     cc8:	b4 01       	movw	r22, r8
     cca:	e6 d2       	rcall	.+1484   	; 0x1298 <__addsf3>
     ccc:	99 d5       	rcall	.+2866   	; 0x1800 <sqrt>
     cce:	9b 01       	movw	r18, r22
     cd0:	ac 01       	movw	r20, r24
     cd2:	c3 01       	movw	r24, r6
     cd4:	b2 01       	movw	r22, r4
     cd6:	73 d3       	rcall	.+1766   	; 0x13be <__divsf3>
     cd8:	43 d3       	rcall	.+1670   	; 0x1360 <atan>
     cda:	20 e0       	ldi	r18, 0x00	; 0
     cdc:	30 e0       	ldi	r19, 0x00	; 0
     cde:	44 e3       	ldi	r20, 0x34	; 52
     ce0:	53 e4       	ldi	r21, 0x43	; 67
     ce2:	21 d5       	rcall	.+2626   	; 0x1726 <__mulsf3>
     ce4:	28 ed       	ldi	r18, 0xD8	; 216
     ce6:	3f e0       	ldi	r19, 0x0F	; 15
     ce8:	49 e4       	ldi	r20, 0x49	; 73
     cea:	50 e4       	ldi	r21, 0x40	; 64
     cec:	68 d3       	rcall	.+1744   	; 0x13be <__divsf3>
     cee:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <angle_ay>
     cf2:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <angle_ay+0x1>
     cf6:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <angle_ay+0x2>
     cfa:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <angle_ay+0x3>

		angle_gx = g_x*dt + las_angle_gx; /// 적분 요기있네
     cfe:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <g_x>
     d02:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <g_x+0x1>
     d06:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <g_x+0x2>
     d0a:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <g_x+0x3>
     d0e:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <dt>
     d12:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <dt+0x1>
     d16:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <dt+0x2>
     d1a:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <dt+0x3>
     d1e:	c0 90 23 01 	lds	r12, 0x0123	; 0x800123 <las_angle_gx>
     d22:	d0 90 24 01 	lds	r13, 0x0124	; 0x800124 <las_angle_gx+0x1>
     d26:	e0 90 25 01 	lds	r14, 0x0125	; 0x800125 <las_angle_gx+0x2>
     d2a:	f0 90 26 01 	lds	r15, 0x0126	; 0x800126 <las_angle_gx+0x3>
     d2e:	fb d4       	rcall	.+2550   	; 0x1726 <__mulsf3>
     d30:	a7 01       	movw	r20, r14
     d32:	96 01       	movw	r18, r12
     d34:	b1 d2       	rcall	.+1378   	; 0x1298 <__addsf3>
     d36:	60 93 73 01 	sts	0x0173, r22	; 0x800173 <angle_gx>
     d3a:	70 93 74 01 	sts	0x0174, r23	; 0x800174 <angle_gx+0x1>
     d3e:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <angle_gx+0x2>
     d42:	90 93 76 01 	sts	0x0176, r25	; 0x800176 <angle_gx+0x3>
		angle_gy = g_y*dt + las_angle_gy;
     d46:	60 91 88 01 	lds	r22, 0x0188	; 0x800188 <g_y>
     d4a:	70 91 89 01 	lds	r23, 0x0189	; 0x800189 <g_y+0x1>
     d4e:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <g_y+0x2>
     d52:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <g_y+0x3>
     d56:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <dt>
     d5a:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <dt+0x1>
     d5e:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <dt+0x2>
     d62:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <dt+0x3>
     d66:	c0 90 77 01 	lds	r12, 0x0177	; 0x800177 <las_angle_gy>
     d6a:	d0 90 78 01 	lds	r13, 0x0178	; 0x800178 <las_angle_gy+0x1>
     d6e:	e0 90 79 01 	lds	r14, 0x0179	; 0x800179 <las_angle_gy+0x2>
     d72:	f0 90 7a 01 	lds	r15, 0x017A	; 0x80017a <las_angle_gy+0x3>
     d76:	d7 d4       	rcall	.+2478   	; 0x1726 <__mulsf3>
     d78:	a7 01       	movw	r20, r14
     d7a:	96 01       	movw	r18, r12
     d7c:	8d d2       	rcall	.+1306   	; 0x1298 <__addsf3>
     d7e:	60 93 4a 01 	sts	0x014A, r22	; 0x80014a <angle_gy>
     d82:	70 93 4b 01 	sts	0x014B, r23	; 0x80014b <angle_gy+0x1>
     d86:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <angle_gy+0x2>
     d8a:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <angle_gy+0x3>
		angle_gz = g_z*dt + las_angle_gz;
     d8e:	60 91 37 01 	lds	r22, 0x0137	; 0x800137 <g_z>
     d92:	70 91 38 01 	lds	r23, 0x0138	; 0x800138 <g_z+0x1>
     d96:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <g_z+0x2>
     d9a:	90 91 3a 01 	lds	r25, 0x013A	; 0x80013a <g_z+0x3>
     d9e:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <dt>
     da2:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <dt+0x1>
     da6:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <dt+0x2>
     daa:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <dt+0x3>
     dae:	c0 90 4e 01 	lds	r12, 0x014E	; 0x80014e <las_angle_gz>
     db2:	d0 90 4f 01 	lds	r13, 0x014F	; 0x80014f <las_angle_gz+0x1>
     db6:	e0 90 50 01 	lds	r14, 0x0150	; 0x800150 <las_angle_gz+0x2>
     dba:	f0 90 51 01 	lds	r15, 0x0151	; 0x800151 <las_angle_gz+0x3>
     dbe:	b3 d4       	rcall	.+2406   	; 0x1726 <__mulsf3>
     dc0:	a7 01       	movw	r20, r14
     dc2:	96 01       	movw	r18, r12
     dc4:	69 d2       	rcall	.+1234   	; 0x1298 <__addsf3>
     dc6:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <angle_gz>
     dca:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <angle_gz+0x1>
     dce:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <angle_gz+0x2>
     dd2:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <angle_gz+0x3>
		//velocity_x= a_x*dt + velocity_x;
		
		alpha = 0.96;
     dd6:	8f e8       	ldi	r24, 0x8F	; 143
     dd8:	92 ec       	ldi	r25, 0xC2	; 194
     dda:	a5 e7       	ldi	r26, 0x75	; 117
     ddc:	bf e3       	ldi	r27, 0x3F	; 63
     dde:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <alpha>
     de2:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <alpha+0x1>
     de6:	a0 93 8e 01 	sts	0x018E, r26	; 0x80018e <alpha+0x2>
     dea:	b0 93 8f 01 	sts	0x018F, r27	; 0x80018f <alpha+0x3>
		angle1=-angle_ax*(PI/180);
     dee:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <angle_ax>
     df2:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <angle_ax+0x1>
     df6:	a0 91 86 01 	lds	r26, 0x0186	; 0x800186 <angle_ax+0x2>
     dfa:	b0 91 87 01 	lds	r27, 0x0187	; 0x800187 <angle_ax+0x3>
     dfe:	bc 01       	movw	r22, r24
     e00:	cd 01       	movw	r24, r26
     e02:	90 58       	subi	r25, 0x80	; 128
     e04:	23 e3       	ldi	r18, 0x33	; 51
     e06:	3a ef       	ldi	r19, 0xFA	; 250
     e08:	4e e8       	ldi	r20, 0x8E	; 142
     e0a:	5c e3       	ldi	r21, 0x3C	; 60
     e0c:	8c d4       	rcall	.+2328   	; 0x1726 <__mulsf3>
     e0e:	60 93 45 01 	sts	0x0145, r22	; 0x800145 <angle1>
     e12:	70 93 46 01 	sts	0x0146, r23	; 0x800146 <angle1+0x1>
     e16:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <angle1+0x2>
     e1a:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <angle1+0x3>
		angle2=-angle_ay*(PI/180);// 마이너스 롤 변경 10/20 3am
     e1e:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <angle_ay>
     e22:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <angle_ay+0x1>
     e26:	a0 91 58 01 	lds	r26, 0x0158	; 0x800158 <angle_ay+0x2>
     e2a:	b0 91 59 01 	lds	r27, 0x0159	; 0x800159 <angle_ay+0x3>
     e2e:	bc 01       	movw	r22, r24
     e30:	cd 01       	movw	r24, r26
     e32:	90 58       	subi	r25, 0x80	; 128
     e34:	23 e3       	ldi	r18, 0x33	; 51
     e36:	3a ef       	ldi	r19, 0xFA	; 250
     e38:	4e e8       	ldi	r20, 0x8E	; 142
     e3a:	5c e3       	ldi	r21, 0x3C	; 60
     e3c:	74 d4       	rcall	.+2280   	; 0x1726 <__mulsf3>
     e3e:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <angle2>
     e42:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <angle2+0x1>
     e46:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <angle2+0x2>
		cal_y =gravity*sin(angle1)*cos(angle2);
     e4a:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <angle2+0x3>
     e4e:	60 91 45 01 	lds	r22, 0x0145	; 0x800145 <angle1>
     e52:	70 91 46 01 	lds	r23, 0x0146	; 0x800146 <angle1+0x1>
     e56:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <angle1+0x2>
     e5a:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <angle1+0x3>
     e5e:	c6 d4       	rcall	.+2444   	; 0x17ec <sin>
     e60:	4b 01       	movw	r8, r22
     e62:	5c 01       	movw	r10, r24
     e64:	40 90 15 01 	lds	r4, 0x0115	; 0x800115 <gravity>
     e68:	50 90 16 01 	lds	r5, 0x0116	; 0x800116 <gravity+0x1>
     e6c:	60 90 17 01 	lds	r6, 0x0117	; 0x800117 <gravity+0x2>
     e70:	70 90 18 01 	lds	r7, 0x0118	; 0x800118 <gravity+0x3>
     e74:	60 91 5a 01 	lds	r22, 0x015A	; 0x80015a <angle2>
     e78:	70 91 5b 01 	lds	r23, 0x015B	; 0x80015b <angle2+0x1>
     e7c:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <angle2+0x2>
     e80:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <angle2+0x3>
     e84:	99 d2       	rcall	.+1330   	; 0x13b8 <cos>
     e86:	6b 01       	movw	r12, r22
     e88:	7c 01       	movw	r14, r24
     e8a:	a3 01       	movw	r20, r6
     e8c:	92 01       	movw	r18, r4
     e8e:	c5 01       	movw	r24, r10
     e90:	b4 01       	movw	r22, r8
     e92:	49 d4       	rcall	.+2194   	; 0x1726 <__mulsf3>
     e94:	a7 01       	movw	r20, r14
     e96:	96 01       	movw	r18, r12
     e98:	46 d4       	rcall	.+2188   	; 0x1726 <__mulsf3>
     e9a:	60 93 52 01 	sts	0x0152, r22	; 0x800152 <cal_y>
     e9e:	70 93 53 01 	sts	0x0153, r23	; 0x800153 <cal_y+0x1>
     ea2:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <cal_y+0x2>
     ea6:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <cal_y+0x3>
		re_y=a_y-cal_y;
     eaa:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <a_y>
     eae:	70 91 09 01 	lds	r23, 0x0109	; 0x800109 <a_y+0x1>
     eb2:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <a_y+0x2>
     eb6:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <a_y+0x3>
     eba:	20 91 52 01 	lds	r18, 0x0152	; 0x800152 <cal_y>
     ebe:	30 91 53 01 	lds	r19, 0x0153	; 0x800153 <cal_y+0x1>
     ec2:	40 91 54 01 	lds	r20, 0x0154	; 0x800154 <cal_y+0x2>
     ec6:	50 91 55 01 	lds	r21, 0x0155	; 0x800155 <cal_y+0x3>
     eca:	e5 d1       	rcall	.+970    	; 0x1296 <__subsf3>
     ecc:	60 93 7b 01 	sts	0x017B, r22	; 0x80017b <re_y>
     ed0:	70 93 7c 01 	sts	0x017C, r23	; 0x80017c <re_y+0x1>
     ed4:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <re_y+0x2>
     ed8:	90 93 7e 01 	sts	0x017E, r25	; 0x80017e <re_y+0x3>
		alpha = 0.6;
     edc:	8a e9       	ldi	r24, 0x9A	; 154
     ede:	99 e9       	ldi	r25, 0x99	; 153
     ee0:	a9 e1       	ldi	r26, 0x19	; 25
     ee2:	bf e3       	ldi	r27, 0x3F	; 63
     ee4:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <alpha>
     ee8:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <alpha+0x1>
     eec:	a0 93 8e 01 	sts	0x018E, r26	; 0x80018e <alpha+0x2>
     ef0:	b0 93 8f 01 	sts	0x018F, r27	; 0x80018f <alpha+0x3>
		//velocity=sqrt(pow(velocity_x,2)+ pow(velocity_y,2));

		dt = 0.000;
     ef4:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <dt>
     ef8:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <dt+0x1>
     efc:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <dt+0x2>
     f00:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <dt+0x3>
		//gravity=sqrt(pow(a_x,2) +pow(a_y,2)+ pow(a_z,2));// 10/20 3am 추가
		
		
		alphacal(angle_ax);
     f04:	60 91 84 01 	lds	r22, 0x0184	; 0x800184 <angle_ax>
     f08:	70 91 85 01 	lds	r23, 0x0185	; 0x800185 <angle_ax+0x1>
     f0c:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <angle_ax+0x2>
     f10:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <angle_ax+0x3>
		roll = alpha*angle_gx + (1.000 - alpha)*angle_ax;
     f14:	31 d9       	rcall	.-3486   	; 0x178 <alphacal>
     f16:	80 90 8c 01 	lds	r8, 0x018C	; 0x80018c <alpha>
     f1a:	90 90 8d 01 	lds	r9, 0x018D	; 0x80018d <alpha+0x1>
     f1e:	a0 90 8e 01 	lds	r10, 0x018E	; 0x80018e <alpha+0x2>
     f22:	b0 90 8f 01 	lds	r11, 0x018F	; 0x80018f <alpha+0x3>
     f26:	40 90 73 01 	lds	r4, 0x0173	; 0x800173 <angle_gx>
     f2a:	50 90 74 01 	lds	r5, 0x0174	; 0x800174 <angle_gx+0x1>
     f2e:	60 90 75 01 	lds	r6, 0x0175	; 0x800175 <angle_gx+0x2>
     f32:	70 90 76 01 	lds	r7, 0x0176	; 0x800176 <angle_gx+0x3>
     f36:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <alpha>
     f3a:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <alpha+0x1>
     f3e:	40 91 8e 01 	lds	r20, 0x018E	; 0x80018e <alpha+0x2>
     f42:	50 91 8f 01 	lds	r21, 0x018F	; 0x80018f <alpha+0x3>
     f46:	c0 90 84 01 	lds	r12, 0x0184	; 0x800184 <angle_ax>
     f4a:	d0 90 85 01 	lds	r13, 0x0185	; 0x800185 <angle_ax+0x1>
     f4e:	e0 90 86 01 	lds	r14, 0x0186	; 0x800186 <angle_ax+0x2>
     f52:	f0 90 87 01 	lds	r15, 0x0187	; 0x800187 <angle_ax+0x3>
     f56:	60 e0       	ldi	r22, 0x00	; 0
     f58:	70 e0       	ldi	r23, 0x00	; 0
     f5a:	80 e8       	ldi	r24, 0x80	; 128
     f5c:	9f e3       	ldi	r25, 0x3F	; 63
     f5e:	9b d1       	rcall	.+822    	; 0x1296 <__subsf3>
     f60:	a7 01       	movw	r20, r14
     f62:	96 01       	movw	r18, r12
     f64:	e0 d3       	rcall	.+1984   	; 0x1726 <__mulsf3>
     f66:	6b 01       	movw	r12, r22
     f68:	7c 01       	movw	r14, r24
     f6a:	a3 01       	movw	r20, r6
     f6c:	92 01       	movw	r18, r4
     f6e:	c5 01       	movw	r24, r10
     f70:	b4 01       	movw	r22, r8
     f72:	d9 d3       	rcall	.+1970   	; 0x1726 <__mulsf3>
     f74:	9b 01       	movw	r18, r22
     f76:	ac 01       	movw	r20, r24
     f78:	c7 01       	movw	r24, r14
     f7a:	b6 01       	movw	r22, r12
     f7c:	8d d1       	rcall	.+794    	; 0x1298 <__addsf3>
     f7e:	60 93 6f 01 	sts	0x016F, r22	; 0x80016f <roll>
     f82:	70 93 70 01 	sts	0x0170, r23	; 0x800170 <roll+0x1>
     f86:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <roll+0x2>
		alphacal(angle_ay);
     f8a:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <roll+0x3>
     f8e:	60 91 56 01 	lds	r22, 0x0156	; 0x800156 <angle_ay>
     f92:	70 91 57 01 	lds	r23, 0x0157	; 0x800157 <angle_ay+0x1>
     f96:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <angle_ay+0x2>
		pitch = alpha*angle_gy + (1.000 - alpha)*angle_ay;
     f9a:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <angle_ay+0x3>
     f9e:	ec d8       	rcall	.-3624   	; 0x178 <alphacal>
     fa0:	80 90 8c 01 	lds	r8, 0x018C	; 0x80018c <alpha>
     fa4:	90 90 8d 01 	lds	r9, 0x018D	; 0x80018d <alpha+0x1>
     fa8:	a0 90 8e 01 	lds	r10, 0x018E	; 0x80018e <alpha+0x2>
     fac:	b0 90 8f 01 	lds	r11, 0x018F	; 0x80018f <alpha+0x3>
     fb0:	40 90 4a 01 	lds	r4, 0x014A	; 0x80014a <angle_gy>
     fb4:	50 90 4b 01 	lds	r5, 0x014B	; 0x80014b <angle_gy+0x1>
     fb8:	60 90 4c 01 	lds	r6, 0x014C	; 0x80014c <angle_gy+0x2>
     fbc:	70 90 4d 01 	lds	r7, 0x014D	; 0x80014d <angle_gy+0x3>
     fc0:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <alpha>
     fc4:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <alpha+0x1>
     fc8:	40 91 8e 01 	lds	r20, 0x018E	; 0x80018e <alpha+0x2>
     fcc:	50 91 8f 01 	lds	r21, 0x018F	; 0x80018f <alpha+0x3>
     fd0:	c0 90 56 01 	lds	r12, 0x0156	; 0x800156 <angle_ay>
     fd4:	d0 90 57 01 	lds	r13, 0x0157	; 0x800157 <angle_ay+0x1>
     fd8:	e0 90 58 01 	lds	r14, 0x0158	; 0x800158 <angle_ay+0x2>
     fdc:	f0 90 59 01 	lds	r15, 0x0159	; 0x800159 <angle_ay+0x3>
     fe0:	60 e0       	ldi	r22, 0x00	; 0
     fe2:	70 e0       	ldi	r23, 0x00	; 0
     fe4:	80 e8       	ldi	r24, 0x80	; 128
     fe6:	9f e3       	ldi	r25, 0x3F	; 63
     fe8:	56 d1       	rcall	.+684    	; 0x1296 <__subsf3>
     fea:	a7 01       	movw	r20, r14
     fec:	96 01       	movw	r18, r12
     fee:	9b d3       	rcall	.+1846   	; 0x1726 <__mulsf3>
     ff0:	6b 01       	movw	r12, r22
     ff2:	7c 01       	movw	r14, r24
     ff4:	a3 01       	movw	r20, r6
     ff6:	92 01       	movw	r18, r4
     ff8:	c5 01       	movw	r24, r10
     ffa:	b4 01       	movw	r22, r8
     ffc:	94 d3       	rcall	.+1832   	; 0x1726 <__mulsf3>
     ffe:	9b 01       	movw	r18, r22
    1000:	ac 01       	movw	r20, r24
    1002:	c7 01       	movw	r24, r14
    1004:	b6 01       	movw	r22, r12
    1006:	48 d1       	rcall	.+656    	; 0x1298 <__addsf3>
    1008:	60 93 6b 01 	sts	0x016B, r22	; 0x80016b <pitch>
    100c:	70 93 6c 01 	sts	0x016C, r23	; 0x80016c <pitch+0x1>
    1010:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <pitch+0x2>
    1014:	90 93 6e 01 	sts	0x016E, r25	; 0x80016e <pitch+0x3>
    1018:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <angle_gz>
		yaw = angle_gz;
    101c:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <angle_gz+0x1>
    1020:	a0 91 20 01 	lds	r26, 0x0120	; 0x800120 <angle_gz+0x2>
    1024:	b0 91 21 01 	lds	r27, 0x0121	; 0x800121 <angle_gz+0x3>
    1028:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <yaw>
    102c:	90 93 68 01 	sts	0x0168, r25	; 0x800168 <yaw+0x1>
    1030:	a0 93 69 01 	sts	0x0169, r26	; 0x800169 <yaw+0x2>
    1034:	b0 93 6a 01 	sts	0x016A, r27	; 0x80016a <yaw+0x3>
		
		
		alpha = 0.9;
    1038:	86 e6       	ldi	r24, 0x66	; 102
    103a:	96 e6       	ldi	r25, 0x66	; 102
    103c:	a6 e6       	ldi	r26, 0x66	; 102
    103e:	bf e3       	ldi	r27, 0x3F	; 63
    1040:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <alpha>
    1044:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <alpha+0x1>
    1048:	a0 93 8e 01 	sts	0x018E, r26	; 0x80018e <alpha+0x2>
		g_x = (alpha*g_x)+((1-alpha)*g_x_temp);
    104c:	b0 93 8f 01 	sts	0x018F, r27	; 0x80018f <alpha+0x3>
    1050:	80 90 8c 01 	lds	r8, 0x018C	; 0x80018c <alpha>
    1054:	90 90 8d 01 	lds	r9, 0x018D	; 0x80018d <alpha+0x1>
    1058:	a0 90 8e 01 	lds	r10, 0x018E	; 0x80018e <alpha+0x2>
    105c:	b0 90 8f 01 	lds	r11, 0x018F	; 0x80018f <alpha+0x3>
    1060:	40 90 10 01 	lds	r4, 0x0110	; 0x800110 <g_x>
    1064:	50 90 11 01 	lds	r5, 0x0111	; 0x800111 <g_x+0x1>
    1068:	60 90 12 01 	lds	r6, 0x0112	; 0x800112 <g_x+0x2>
    106c:	70 90 13 01 	lds	r7, 0x0113	; 0x800113 <g_x+0x3>
    1070:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <alpha>
    1074:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <alpha+0x1>
    1078:	40 91 8e 01 	lds	r20, 0x018E	; 0x80018e <alpha+0x2>
    107c:	50 91 8f 01 	lds	r21, 0x018F	; 0x80018f <alpha+0x3>
    1080:	c0 90 62 01 	lds	r12, 0x0162	; 0x800162 <g_x_temp>
    1084:	d0 90 63 01 	lds	r13, 0x0163	; 0x800163 <g_x_temp+0x1>
    1088:	e0 90 64 01 	lds	r14, 0x0164	; 0x800164 <g_x_temp+0x2>
    108c:	f0 90 65 01 	lds	r15, 0x0165	; 0x800165 <g_x_temp+0x3>
    1090:	60 e0       	ldi	r22, 0x00	; 0
    1092:	70 e0       	ldi	r23, 0x00	; 0
    1094:	80 e8       	ldi	r24, 0x80	; 128
    1096:	9f e3       	ldi	r25, 0x3F	; 63
    1098:	fe d0       	rcall	.+508    	; 0x1296 <__subsf3>
    109a:	a7 01       	movw	r20, r14
    109c:	96 01       	movw	r18, r12
    109e:	43 d3       	rcall	.+1670   	; 0x1726 <__mulsf3>
    10a0:	6b 01       	movw	r12, r22
    10a2:	7c 01       	movw	r14, r24
    10a4:	a3 01       	movw	r20, r6
    10a6:	92 01       	movw	r18, r4
    10a8:	c5 01       	movw	r24, r10
    10aa:	b4 01       	movw	r22, r8
    10ac:	3c d3       	rcall	.+1656   	; 0x1726 <__mulsf3>
    10ae:	9b 01       	movw	r18, r22
    10b0:	ac 01       	movw	r20, r24
    10b2:	c7 01       	movw	r24, r14
    10b4:	b6 01       	movw	r22, r12
    10b6:	f0 d0       	rcall	.+480    	; 0x1298 <__addsf3>
    10b8:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <g_x>
    10bc:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <g_x+0x1>
    10c0:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <g_x+0x2>
		
		// 10/20 3am 추가
		// angle_x 재대로 된건가? 필터를 넣을 필요가 있나?? // 누적할 필요가 있나?
		// 어차피 가속도
		//if ((g_x<=-180)&&(angle_gx<=-30))//(g_x<=-150)&&((angle_ax>=-60)&&(angle_ax<=-10)) 실제 신ㄱ 걸은거
		if(fabs(g_x)>4)
    10c4:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <g_x+0x3>
    10c8:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <g_x>
    10cc:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <g_x+0x1>
    10d0:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <g_x+0x2>
    10d4:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <g_x+0x3>
    10d8:	bc 01       	movw	r22, r24
    10da:	cd 01       	movw	r24, r26
    10dc:	9f 77       	andi	r25, 0x7F	; 127
    10de:	20 e0       	ldi	r18, 0x00	; 0
    10e0:	30 e0       	ldi	r19, 0x00	; 0
    10e2:	40 e8       	ldi	r20, 0x80	; 128
    10e4:	50 e4       	ldi	r21, 0x40	; 64
    10e6:	14 d3       	rcall	.+1576   	; 0x1710 <__gesf2>
		{
			if(((((0.6)*g_x_temp)+g_x)<=0)&&(g_x<g_x_temp))
    10e8:	18 16       	cp	r1, r24
    10ea:	0c f0       	brlt	.+2      	; 0x10ee <main+0x844>
    10ec:	86 c0       	rjmp	.+268    	; 0x11fa <__stack+0xfb>
    10ee:	60 91 62 01 	lds	r22, 0x0162	; 0x800162 <g_x_temp>
    10f2:	70 91 63 01 	lds	r23, 0x0163	; 0x800163 <g_x_temp+0x1>
    10f6:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <g_x_temp+0x2>
    10fa:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <g_x_temp+0x3>
    10fe:	c0 90 10 01 	lds	r12, 0x0110	; 0x800110 <g_x>
    1102:	d0 90 11 01 	lds	r13, 0x0111	; 0x800111 <g_x+0x1>
    1106:	e0 90 12 01 	lds	r14, 0x0112	; 0x800112 <g_x+0x2>
    110a:	f0 90 13 01 	lds	r15, 0x0113	; 0x800113 <g_x+0x3>
    110e:	2a e9       	ldi	r18, 0x9A	; 154
    1110:	39 e9       	ldi	r19, 0x99	; 153
    1112:	49 e1       	ldi	r20, 0x19	; 25
    1114:	5f e3       	ldi	r21, 0x3F	; 63
    1116:	07 d3       	rcall	.+1550   	; 0x1726 <__mulsf3>
    1118:	a7 01       	movw	r20, r14
    111a:	96 01       	movw	r18, r12
    111c:	bd d0       	rcall	.+378    	; 0x1298 <__addsf3>
    111e:	20 e0       	ldi	r18, 0x00	; 0
    1120:	30 e0       	ldi	r19, 0x00	; 0
    1122:	a9 01       	movw	r20, r18
    1124:	45 d1       	rcall	.+650    	; 0x13b0 <__cmpsf2>
    1126:	18 16       	cp	r1, r24
    1128:	4c f1       	brlt	.+82     	; 0x117c <__stack+0x7d>
    112a:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <g_x>
    112e:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <g_x+0x1>
    1132:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <g_x+0x2>
    1136:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <g_x+0x3>
    113a:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <g_x_temp>
    113e:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <g_x_temp+0x1>
    1142:	40 91 64 01 	lds	r20, 0x0164	; 0x800164 <g_x_temp+0x2>
    1146:	50 91 65 01 	lds	r21, 0x0165	; 0x800165 <g_x_temp+0x3>
    114a:	32 d1       	rcall	.+612    	; 0x13b0 <__cmpsf2>
    114c:	88 23       	and	r24, r24
    114e:	b4 f4       	brge	.+44     	; 0x117c <__stack+0x7d>
			{
				M_COUNT=M_COUNT+1;
    1150:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
    1154:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
    1158:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
    115c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
    1160:	20 e0       	ldi	r18, 0x00	; 0
    1162:	30 e0       	ldi	r19, 0x00	; 0
    1164:	40 e8       	ldi	r20, 0x80	; 128
    1166:	5f e3       	ldi	r21, 0x3F	; 63
    1168:	97 d0       	rcall	.+302    	; 0x1298 <__addsf3>
    116a:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
    116e:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
    1172:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_edata+0x2>
    1176:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_edata+0x3>
    117a:	11 c0       	rjmp	.+34     	; 0x119e <__stack+0x9f>
    117c:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
			}
			else
			{
				M_COUNT=0;
    1180:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
    1184:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <_edata+0x2>
    1188:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <_edata+0x3>
    118c:	a6 e8       	ldi	r26, 0x86	; 134
				OCR3A = 150;
    118e:	b0 e0       	ldi	r27, 0x00	; 0
    1190:	11 96       	adiw	r26, 0x01	; 1
    1192:	3c 92       	st	X, r3
    1194:	2e 92       	st	-X, r2
    1196:	e4 e8       	ldi	r30, 0x84	; 132
				OCR3B = 500;
    1198:	f0 e0       	ldi	r31, 0x00	; 0
    119a:	11 83       	std	Z+1, r17	; 0x01
    119c:	00 83       	st	Z, r16
    119e:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
			else if(((((0.5)*g_x_temp)+g_x)>=0)&&(g_x<g_x_temp))
			{
				OCR3A = 150;
				OCR3B = 500;
			}*/
			if((M_COUNT == 2))
    11a2:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
    11a6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
    11aa:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
    11ae:	20 e0       	ldi	r18, 0x00	; 0
    11b0:	30 e0       	ldi	r19, 0x00	; 0
    11b2:	40 e0       	ldi	r20, 0x00	; 0
    11b4:	50 e4       	ldi	r21, 0x40	; 64
    11b6:	fc d0       	rcall	.+504    	; 0x13b0 <__cmpsf2>
    11b8:	81 11       	cpse	r24, r1
			{
				OCR3A = 460;
    11ba:	1f c0       	rjmp	.+62     	; 0x11fa <__stack+0xfb>
    11bc:	ec ec       	ldi	r30, 0xCC	; 204
    11be:	f1 e0       	ldi	r31, 0x01	; 1
    11c0:	a6 e8       	ldi	r26, 0x86	; 134
				OCR3B = 190;
    11c2:	b0 e0       	ldi	r27, 0x00	; 0
    11c4:	11 96       	adiw	r26, 0x01	; 1
    11c6:	fc 93       	st	X, r31
    11c8:	ee 93       	st	-X, r30
    11ca:	ee eb       	ldi	r30, 0xBE	; 190
    11cc:	f0 e0       	ldi	r31, 0x00	; 0
				M_COUNT=0;
    11ce:	a4 e8       	ldi	r26, 0x84	; 132
    11d0:	b0 e0       	ldi	r27, 0x00	; 0
    11d2:	11 96       	adiw	r26, 0x01	; 1
    11d4:	fc 93       	st	X, r31
    11d6:	ee 93       	st	-X, r30
    11d8:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
    11dc:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
    11e0:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <_edata+0x2>
    11e4:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <_edata+0x3>
				OCR3A = 150;
				OCR3B = 500;
			}*/
			
		}
		g_x_temp = g_x;
    11e8:	ff ef       	ldi	r31, 0xFF	; 255
    11ea:	25 ea       	ldi	r18, 0xA5	; 165
    11ec:	8e e0       	ldi	r24, 0x0E	; 14
    11ee:	f1 50       	subi	r31, 0x01	; 1
    11f0:	20 40       	sbci	r18, 0x00	; 0
    11f2:	80 40       	sbci	r24, 0x00	; 0
    11f4:	e1 f7       	brne	.-8      	; 0x11ee <__stack+0xef>
    11f6:	00 c0       	rjmp	.+0      	; 0x11f8 <__stack+0xf9>
    11f8:	00 00       	nop
    11fa:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <g_x>
    11fe:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <g_x+0x1>
    1202:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <g_x+0x2>
    1206:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <g_x+0x3>
		USART_Transmit_init4(pitch);
		USART_Transmit('\t');
		USART_Transmit_init4(yaw);
		USART_Transmit('\t');
		USART_Transmit_init4(velocity_x);*/
		USART_Transmit_init4(g_x);
    120a:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <g_x_temp>
    120e:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <g_x_temp+0x1>
    1212:	a0 93 64 01 	sts	0x0164, r26	; 0x800164 <g_x_temp+0x2>
    1216:	b0 93 65 01 	sts	0x0165, r27	; 0x800165 <g_x_temp+0x3>
    121a:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <g_x>
    121e:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <g_x+0x1>
		USART_Transmit(',');
    1222:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <g_x+0x2>
    1226:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <g_x+0x3>
		USART_Transmit_init4(angle_ax);
    122a:	31 d1       	rcall	.+610    	; 0x148e <__fixsfsi>
    122c:	cb 01       	movw	r24, r22
    122e:	f5 da       	rcall	.-2582   	; 0x81a <USART_Transmit_init4>
    1230:	8c e2       	ldi	r24, 0x2C	; 44
    1232:	ef da       	rcall	.-2594   	; 0x812 <USART_Transmit>
    1234:	60 91 84 01 	lds	r22, 0x0184	; 0x800184 <angle_ax>
    1238:	70 91 85 01 	lds	r23, 0x0185	; 0x800185 <angle_ax+0x1>
    123c:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <angle_ax+0x2>
    1240:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <angle_ax+0x3>
		USART_Transmit(',');
    1244:	24 d1       	rcall	.+584    	; 0x148e <__fixsfsi>
    1246:	cb 01       	movw	r24, r22
		USART_Transmit_init4(angle_gx);
    1248:	e8 da       	rcall	.-2608   	; 0x81a <USART_Transmit_init4>
    124a:	8c e2       	ldi	r24, 0x2C	; 44
    124c:	e2 da       	rcall	.-2620   	; 0x812 <USART_Transmit>
    124e:	60 91 73 01 	lds	r22, 0x0173	; 0x800173 <angle_gx>
    1252:	70 91 74 01 	lds	r23, 0x0174	; 0x800174 <angle_gx+0x1>
    1256:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <angle_gx+0x2>
    125a:	90 91 76 01 	lds	r25, 0x0176	; 0x800176 <angle_gx+0x3>
    125e:	17 d1       	rcall	.+558    	; 0x148e <__fixsfsi>
    1260:	cb 01       	movw	r24, r22
		USART_Transmit(',');
    1262:	db da       	rcall	.-2634   	; 0x81a <USART_Transmit_init4>
    1264:	8c e2       	ldi	r24, 0x2C	; 44
    1266:	d5 da       	rcall	.-2646   	; 0x812 <USART_Transmit>
		USART_Transmit_init4(roll);
    1268:	60 91 6f 01 	lds	r22, 0x016F	; 0x80016f <roll>
    126c:	70 91 70 01 	lds	r23, 0x0170	; 0x800170 <roll+0x1>
    1270:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <roll+0x2>
    1274:	90 91 72 01 	lds	r25, 0x0172	; 0x800172 <roll+0x3>
    1278:	0a d1       	rcall	.+532    	; 0x148e <__fixsfsi>
    127a:	cb 01       	movw	r24, r22
    127c:	ce da       	rcall	.-2660   	; 0x81a <USART_Transmit_init4>
    127e:	8d e0       	ldi	r24, 0x0D	; 13
    1280:	c8 da       	rcall	.-2672   	; 0x812 <USART_Transmit>
		USART_Transmit(0x0d);
    1282:	9f ef       	ldi	r25, 0xFF	; 255
    1284:	a1 ee       	ldi	r26, 0xE1	; 225
    1286:	b4 e0       	ldi	r27, 0x04	; 4
    1288:	91 50       	subi	r25, 0x01	; 1
    128a:	a0 40       	sbci	r26, 0x00	; 0
    128c:	b0 40       	sbci	r27, 0x00	; 0
    128e:	e1 f7       	brne	.-8      	; 0x1288 <__stack+0x189>
    1290:	00 c0       	rjmp	.+0      	; 0x1292 <__stack+0x193>
    1292:	00 00       	nop
    1294:	6a cb       	rjmp	.-2348   	; 0x96a <main+0xc0>

00001296 <__subsf3>:
    1296:	50 58       	subi	r21, 0x80	; 128

00001298 <__addsf3>:
    1298:	bb 27       	eor	r27, r27
    129a:	aa 27       	eor	r26, r26
    129c:	0e d0       	rcall	.+28     	; 0x12ba <__addsf3x>
    129e:	ed c1       	rjmp	.+986    	; 0x167a <__fp_round>
    12a0:	b6 d1       	rcall	.+876    	; 0x160e <__fp_pscA>
    12a2:	30 f0       	brcs	.+12     	; 0x12b0 <__addsf3+0x18>
    12a4:	bb d1       	rcall	.+886    	; 0x161c <__fp_pscB>
    12a6:	20 f0       	brcs	.+8      	; 0x12b0 <__addsf3+0x18>
    12a8:	31 f4       	brne	.+12     	; 0x12b6 <__addsf3+0x1e>
    12aa:	9f 3f       	cpi	r25, 0xFF	; 255
    12ac:	11 f4       	brne	.+4      	; 0x12b2 <__addsf3+0x1a>
    12ae:	1e f4       	brtc	.+6      	; 0x12b6 <__addsf3+0x1e>
    12b0:	86 c1       	rjmp	.+780    	; 0x15be <__fp_nan>
    12b2:	0e f4       	brtc	.+2      	; 0x12b6 <__addsf3+0x1e>
    12b4:	e0 95       	com	r30
    12b6:	e7 fb       	bst	r30, 7
    12b8:	7c c1       	rjmp	.+760    	; 0x15b2 <__fp_inf>

000012ba <__addsf3x>:
    12ba:	e9 2f       	mov	r30, r25
    12bc:	00 d2       	rcall	.+1024   	; 0x16be <__fp_split3>
    12be:	80 f3       	brcs	.-32     	; 0x12a0 <__addsf3+0x8>
    12c0:	ba 17       	cp	r27, r26
    12c2:	62 07       	cpc	r22, r18
    12c4:	73 07       	cpc	r23, r19
    12c6:	84 07       	cpc	r24, r20
    12c8:	95 07       	cpc	r25, r21
    12ca:	18 f0       	brcs	.+6      	; 0x12d2 <__addsf3x+0x18>
    12cc:	71 f4       	brne	.+28     	; 0x12ea <__addsf3x+0x30>
    12ce:	9e f5       	brtc	.+102    	; 0x1336 <__addsf3x+0x7c>
    12d0:	18 c2       	rjmp	.+1072   	; 0x1702 <__fp_zero>
    12d2:	0e f4       	brtc	.+2      	; 0x12d6 <__addsf3x+0x1c>
    12d4:	e0 95       	com	r30
    12d6:	0b 2e       	mov	r0, r27
    12d8:	ba 2f       	mov	r27, r26
    12da:	a0 2d       	mov	r26, r0
    12dc:	0b 01       	movw	r0, r22
    12de:	b9 01       	movw	r22, r18
    12e0:	90 01       	movw	r18, r0
    12e2:	0c 01       	movw	r0, r24
    12e4:	ca 01       	movw	r24, r20
    12e6:	a0 01       	movw	r20, r0
    12e8:	11 24       	eor	r1, r1
    12ea:	ff 27       	eor	r31, r31
    12ec:	59 1b       	sub	r21, r25
    12ee:	99 f0       	breq	.+38     	; 0x1316 <__addsf3x+0x5c>
    12f0:	59 3f       	cpi	r21, 0xF9	; 249
    12f2:	50 f4       	brcc	.+20     	; 0x1308 <__addsf3x+0x4e>
    12f4:	50 3e       	cpi	r21, 0xE0	; 224
    12f6:	68 f1       	brcs	.+90     	; 0x1352 <__addsf3x+0x98>
    12f8:	1a 16       	cp	r1, r26
    12fa:	f0 40       	sbci	r31, 0x00	; 0
    12fc:	a2 2f       	mov	r26, r18
    12fe:	23 2f       	mov	r18, r19
    1300:	34 2f       	mov	r19, r20
    1302:	44 27       	eor	r20, r20
    1304:	58 5f       	subi	r21, 0xF8	; 248
    1306:	f3 cf       	rjmp	.-26     	; 0x12ee <__addsf3x+0x34>
    1308:	46 95       	lsr	r20
    130a:	37 95       	ror	r19
    130c:	27 95       	ror	r18
    130e:	a7 95       	ror	r26
    1310:	f0 40       	sbci	r31, 0x00	; 0
    1312:	53 95       	inc	r21
    1314:	c9 f7       	brne	.-14     	; 0x1308 <__addsf3x+0x4e>
    1316:	7e f4       	brtc	.+30     	; 0x1336 <__addsf3x+0x7c>
    1318:	1f 16       	cp	r1, r31
    131a:	ba 0b       	sbc	r27, r26
    131c:	62 0b       	sbc	r22, r18
    131e:	73 0b       	sbc	r23, r19
    1320:	84 0b       	sbc	r24, r20
    1322:	ba f0       	brmi	.+46     	; 0x1352 <__addsf3x+0x98>
    1324:	91 50       	subi	r25, 0x01	; 1
    1326:	a1 f0       	breq	.+40     	; 0x1350 <__addsf3x+0x96>
    1328:	ff 0f       	add	r31, r31
    132a:	bb 1f       	adc	r27, r27
    132c:	66 1f       	adc	r22, r22
    132e:	77 1f       	adc	r23, r23
    1330:	88 1f       	adc	r24, r24
    1332:	c2 f7       	brpl	.-16     	; 0x1324 <__addsf3x+0x6a>
    1334:	0e c0       	rjmp	.+28     	; 0x1352 <__addsf3x+0x98>
    1336:	ba 0f       	add	r27, r26
    1338:	62 1f       	adc	r22, r18
    133a:	73 1f       	adc	r23, r19
    133c:	84 1f       	adc	r24, r20
    133e:	48 f4       	brcc	.+18     	; 0x1352 <__addsf3x+0x98>
    1340:	87 95       	ror	r24
    1342:	77 95       	ror	r23
    1344:	67 95       	ror	r22
    1346:	b7 95       	ror	r27
    1348:	f7 95       	ror	r31
    134a:	9e 3f       	cpi	r25, 0xFE	; 254
    134c:	08 f0       	brcs	.+2      	; 0x1350 <__addsf3x+0x96>
    134e:	b3 cf       	rjmp	.-154    	; 0x12b6 <__addsf3+0x1e>
    1350:	93 95       	inc	r25
    1352:	88 0f       	add	r24, r24
    1354:	08 f0       	brcs	.+2      	; 0x1358 <__addsf3x+0x9e>
    1356:	99 27       	eor	r25, r25
    1358:	ee 0f       	add	r30, r30
    135a:	97 95       	ror	r25
    135c:	87 95       	ror	r24
    135e:	08 95       	ret

00001360 <atan>:
    1360:	df 93       	push	r29
    1362:	dd 27       	eor	r29, r29
    1364:	b9 2f       	mov	r27, r25
    1366:	bf 77       	andi	r27, 0x7F	; 127
    1368:	40 e8       	ldi	r20, 0x80	; 128
    136a:	5f e3       	ldi	r21, 0x3F	; 63
    136c:	16 16       	cp	r1, r22
    136e:	17 06       	cpc	r1, r23
    1370:	48 07       	cpc	r20, r24
    1372:	5b 07       	cpc	r21, r27
    1374:	10 f4       	brcc	.+4      	; 0x137a <atan+0x1a>
    1376:	d9 2f       	mov	r29, r25
    1378:	cf d1       	rcall	.+926    	; 0x1718 <inverse>
    137a:	9f 93       	push	r25
    137c:	8f 93       	push	r24
    137e:	7f 93       	push	r23
    1380:	6f 93       	push	r22
    1382:	7c d2       	rcall	.+1272   	; 0x187c <square>
    1384:	ec e8       	ldi	r30, 0x8C	; 140
    1386:	f0 e0       	ldi	r31, 0x00	; 0
    1388:	1d d1       	rcall	.+570    	; 0x15c4 <__fp_powser>
    138a:	77 d1       	rcall	.+750    	; 0x167a <__fp_round>
    138c:	2f 91       	pop	r18
    138e:	3f 91       	pop	r19
    1390:	4f 91       	pop	r20
    1392:	5f 91       	pop	r21
    1394:	d4 d1       	rcall	.+936    	; 0x173e <__mulsf3x>
    1396:	dd 23       	and	r29, r29
    1398:	49 f0       	breq	.+18     	; 0x13ac <atan+0x4c>
    139a:	90 58       	subi	r25, 0x80	; 128
    139c:	a2 ea       	ldi	r26, 0xA2	; 162
    139e:	2a ed       	ldi	r18, 0xDA	; 218
    13a0:	3f e0       	ldi	r19, 0x0F	; 15
    13a2:	49 ec       	ldi	r20, 0xC9	; 201
    13a4:	5f e3       	ldi	r21, 0x3F	; 63
    13a6:	d0 78       	andi	r29, 0x80	; 128
    13a8:	5d 27       	eor	r21, r29
    13aa:	87 df       	rcall	.-242    	; 0x12ba <__addsf3x>
    13ac:	df 91       	pop	r29
    13ae:	65 c1       	rjmp	.+714    	; 0x167a <__fp_round>

000013b0 <__cmpsf2>:
    13b0:	dc d0       	rcall	.+440    	; 0x156a <__fp_cmp>
    13b2:	08 f4       	brcc	.+2      	; 0x13b6 <__cmpsf2+0x6>
    13b4:	81 e0       	ldi	r24, 0x01	; 1
    13b6:	08 95       	ret

000013b8 <cos>:
    13b8:	39 d1       	rcall	.+626    	; 0x162c <__fp_rempio2>
    13ba:	e3 95       	inc	r30
    13bc:	6f c1       	rjmp	.+734    	; 0x169c <__fp_sinus>

000013be <__divsf3>:
    13be:	0c d0       	rcall	.+24     	; 0x13d8 <__divsf3x>
    13c0:	5c c1       	rjmp	.+696    	; 0x167a <__fp_round>
    13c2:	2c d1       	rcall	.+600    	; 0x161c <__fp_pscB>
    13c4:	40 f0       	brcs	.+16     	; 0x13d6 <__divsf3+0x18>
    13c6:	23 d1       	rcall	.+582    	; 0x160e <__fp_pscA>
    13c8:	30 f0       	brcs	.+12     	; 0x13d6 <__divsf3+0x18>
    13ca:	21 f4       	brne	.+8      	; 0x13d4 <__divsf3+0x16>
    13cc:	5f 3f       	cpi	r21, 0xFF	; 255
    13ce:	19 f0       	breq	.+6      	; 0x13d6 <__divsf3+0x18>
    13d0:	f0 c0       	rjmp	.+480    	; 0x15b2 <__fp_inf>
    13d2:	51 11       	cpse	r21, r1
    13d4:	97 c1       	rjmp	.+814    	; 0x1704 <__fp_szero>
    13d6:	f3 c0       	rjmp	.+486    	; 0x15be <__fp_nan>

000013d8 <__divsf3x>:
    13d8:	72 d1       	rcall	.+740    	; 0x16be <__fp_split3>
    13da:	98 f3       	brcs	.-26     	; 0x13c2 <__divsf3+0x4>

000013dc <__divsf3_pse>:
    13dc:	99 23       	and	r25, r25
    13de:	c9 f3       	breq	.-14     	; 0x13d2 <__divsf3+0x14>
    13e0:	55 23       	and	r21, r21
    13e2:	b1 f3       	breq	.-20     	; 0x13d0 <__divsf3+0x12>
    13e4:	95 1b       	sub	r25, r21
    13e6:	55 0b       	sbc	r21, r21
    13e8:	bb 27       	eor	r27, r27
    13ea:	aa 27       	eor	r26, r26
    13ec:	62 17       	cp	r22, r18
    13ee:	73 07       	cpc	r23, r19
    13f0:	84 07       	cpc	r24, r20
    13f2:	38 f0       	brcs	.+14     	; 0x1402 <__divsf3_pse+0x26>
    13f4:	9f 5f       	subi	r25, 0xFF	; 255
    13f6:	5f 4f       	sbci	r21, 0xFF	; 255
    13f8:	22 0f       	add	r18, r18
    13fa:	33 1f       	adc	r19, r19
    13fc:	44 1f       	adc	r20, r20
    13fe:	aa 1f       	adc	r26, r26
    1400:	a9 f3       	breq	.-22     	; 0x13ec <__divsf3_pse+0x10>
    1402:	33 d0       	rcall	.+102    	; 0x146a <__divsf3_pse+0x8e>
    1404:	0e 2e       	mov	r0, r30
    1406:	3a f0       	brmi	.+14     	; 0x1416 <__divsf3_pse+0x3a>
    1408:	e0 e8       	ldi	r30, 0x80	; 128
    140a:	30 d0       	rcall	.+96     	; 0x146c <__divsf3_pse+0x90>
    140c:	91 50       	subi	r25, 0x01	; 1
    140e:	50 40       	sbci	r21, 0x00	; 0
    1410:	e6 95       	lsr	r30
    1412:	00 1c       	adc	r0, r0
    1414:	ca f7       	brpl	.-14     	; 0x1408 <__divsf3_pse+0x2c>
    1416:	29 d0       	rcall	.+82     	; 0x146a <__divsf3_pse+0x8e>
    1418:	fe 2f       	mov	r31, r30
    141a:	27 d0       	rcall	.+78     	; 0x146a <__divsf3_pse+0x8e>
    141c:	66 0f       	add	r22, r22
    141e:	77 1f       	adc	r23, r23
    1420:	88 1f       	adc	r24, r24
    1422:	bb 1f       	adc	r27, r27
    1424:	26 17       	cp	r18, r22
    1426:	37 07       	cpc	r19, r23
    1428:	48 07       	cpc	r20, r24
    142a:	ab 07       	cpc	r26, r27
    142c:	b0 e8       	ldi	r27, 0x80	; 128
    142e:	09 f0       	breq	.+2      	; 0x1432 <__divsf3_pse+0x56>
    1430:	bb 0b       	sbc	r27, r27
    1432:	80 2d       	mov	r24, r0
    1434:	bf 01       	movw	r22, r30
    1436:	ff 27       	eor	r31, r31
    1438:	93 58       	subi	r25, 0x83	; 131
    143a:	5f 4f       	sbci	r21, 0xFF	; 255
    143c:	2a f0       	brmi	.+10     	; 0x1448 <__divsf3_pse+0x6c>
    143e:	9e 3f       	cpi	r25, 0xFE	; 254
    1440:	51 05       	cpc	r21, r1
    1442:	68 f0       	brcs	.+26     	; 0x145e <__divsf3_pse+0x82>
    1444:	b6 c0       	rjmp	.+364    	; 0x15b2 <__fp_inf>
    1446:	5e c1       	rjmp	.+700    	; 0x1704 <__fp_szero>
    1448:	5f 3f       	cpi	r21, 0xFF	; 255
    144a:	ec f3       	brlt	.-6      	; 0x1446 <__divsf3_pse+0x6a>
    144c:	98 3e       	cpi	r25, 0xE8	; 232
    144e:	dc f3       	brlt	.-10     	; 0x1446 <__divsf3_pse+0x6a>
    1450:	86 95       	lsr	r24
    1452:	77 95       	ror	r23
    1454:	67 95       	ror	r22
    1456:	b7 95       	ror	r27
    1458:	f7 95       	ror	r31
    145a:	9f 5f       	subi	r25, 0xFF	; 255
    145c:	c9 f7       	brne	.-14     	; 0x1450 <__divsf3_pse+0x74>
    145e:	88 0f       	add	r24, r24
    1460:	91 1d       	adc	r25, r1
    1462:	96 95       	lsr	r25
    1464:	87 95       	ror	r24
    1466:	97 f9       	bld	r25, 7
    1468:	08 95       	ret
    146a:	e1 e0       	ldi	r30, 0x01	; 1
    146c:	66 0f       	add	r22, r22
    146e:	77 1f       	adc	r23, r23
    1470:	88 1f       	adc	r24, r24
    1472:	bb 1f       	adc	r27, r27
    1474:	62 17       	cp	r22, r18
    1476:	73 07       	cpc	r23, r19
    1478:	84 07       	cpc	r24, r20
    147a:	ba 07       	cpc	r27, r26
    147c:	20 f0       	brcs	.+8      	; 0x1486 <__divsf3_pse+0xaa>
    147e:	62 1b       	sub	r22, r18
    1480:	73 0b       	sbc	r23, r19
    1482:	84 0b       	sbc	r24, r20
    1484:	ba 0b       	sbc	r27, r26
    1486:	ee 1f       	adc	r30, r30
    1488:	88 f7       	brcc	.-30     	; 0x146c <__divsf3_pse+0x90>
    148a:	e0 95       	com	r30
    148c:	08 95       	ret

0000148e <__fixsfsi>:
    148e:	04 d0       	rcall	.+8      	; 0x1498 <__fixunssfsi>
    1490:	68 94       	set
    1492:	b1 11       	cpse	r27, r1
    1494:	37 c1       	rjmp	.+622    	; 0x1704 <__fp_szero>
    1496:	08 95       	ret

00001498 <__fixunssfsi>:
    1498:	1a d1       	rcall	.+564    	; 0x16ce <__fp_splitA>
    149a:	88 f0       	brcs	.+34     	; 0x14be <__fixunssfsi+0x26>
    149c:	9f 57       	subi	r25, 0x7F	; 127
    149e:	90 f0       	brcs	.+36     	; 0x14c4 <__fixunssfsi+0x2c>
    14a0:	b9 2f       	mov	r27, r25
    14a2:	99 27       	eor	r25, r25
    14a4:	b7 51       	subi	r27, 0x17	; 23
    14a6:	a0 f0       	brcs	.+40     	; 0x14d0 <__fixunssfsi+0x38>
    14a8:	d1 f0       	breq	.+52     	; 0x14de <__fixunssfsi+0x46>
    14aa:	66 0f       	add	r22, r22
    14ac:	77 1f       	adc	r23, r23
    14ae:	88 1f       	adc	r24, r24
    14b0:	99 1f       	adc	r25, r25
    14b2:	1a f0       	brmi	.+6      	; 0x14ba <__fixunssfsi+0x22>
    14b4:	ba 95       	dec	r27
    14b6:	c9 f7       	brne	.-14     	; 0x14aa <__fixunssfsi+0x12>
    14b8:	12 c0       	rjmp	.+36     	; 0x14de <__fixunssfsi+0x46>
    14ba:	b1 30       	cpi	r27, 0x01	; 1
    14bc:	81 f0       	breq	.+32     	; 0x14de <__fixunssfsi+0x46>
    14be:	21 d1       	rcall	.+578    	; 0x1702 <__fp_zero>
    14c0:	b1 e0       	ldi	r27, 0x01	; 1
    14c2:	08 95       	ret
    14c4:	1e c1       	rjmp	.+572    	; 0x1702 <__fp_zero>
    14c6:	67 2f       	mov	r22, r23
    14c8:	78 2f       	mov	r23, r24
    14ca:	88 27       	eor	r24, r24
    14cc:	b8 5f       	subi	r27, 0xF8	; 248
    14ce:	39 f0       	breq	.+14     	; 0x14de <__fixunssfsi+0x46>
    14d0:	b9 3f       	cpi	r27, 0xF9	; 249
    14d2:	cc f3       	brlt	.-14     	; 0x14c6 <__fixunssfsi+0x2e>
    14d4:	86 95       	lsr	r24
    14d6:	77 95       	ror	r23
    14d8:	67 95       	ror	r22
    14da:	b3 95       	inc	r27
    14dc:	d9 f7       	brne	.-10     	; 0x14d4 <__fixunssfsi+0x3c>
    14de:	3e f4       	brtc	.+14     	; 0x14ee <__fixunssfsi+0x56>
    14e0:	90 95       	com	r25
    14e2:	80 95       	com	r24
    14e4:	70 95       	com	r23
    14e6:	61 95       	neg	r22
    14e8:	7f 4f       	sbci	r23, 0xFF	; 255
    14ea:	8f 4f       	sbci	r24, 0xFF	; 255
    14ec:	9f 4f       	sbci	r25, 0xFF	; 255
    14ee:	08 95       	ret

000014f0 <__floatunsisf>:
    14f0:	e8 94       	clt
    14f2:	09 c0       	rjmp	.+18     	; 0x1506 <__floatsisf+0x12>

000014f4 <__floatsisf>:
    14f4:	97 fb       	bst	r25, 7
    14f6:	3e f4       	brtc	.+14     	; 0x1506 <__floatsisf+0x12>
    14f8:	90 95       	com	r25
    14fa:	80 95       	com	r24
    14fc:	70 95       	com	r23
    14fe:	61 95       	neg	r22
    1500:	7f 4f       	sbci	r23, 0xFF	; 255
    1502:	8f 4f       	sbci	r24, 0xFF	; 255
    1504:	9f 4f       	sbci	r25, 0xFF	; 255
    1506:	99 23       	and	r25, r25
    1508:	a9 f0       	breq	.+42     	; 0x1534 <__floatsisf+0x40>
    150a:	f9 2f       	mov	r31, r25
    150c:	96 e9       	ldi	r25, 0x96	; 150
    150e:	bb 27       	eor	r27, r27
    1510:	93 95       	inc	r25
    1512:	f6 95       	lsr	r31
    1514:	87 95       	ror	r24
    1516:	77 95       	ror	r23
    1518:	67 95       	ror	r22
    151a:	b7 95       	ror	r27
    151c:	f1 11       	cpse	r31, r1
    151e:	f8 cf       	rjmp	.-16     	; 0x1510 <__floatsisf+0x1c>
    1520:	fa f4       	brpl	.+62     	; 0x1560 <__floatsisf+0x6c>
    1522:	bb 0f       	add	r27, r27
    1524:	11 f4       	brne	.+4      	; 0x152a <__floatsisf+0x36>
    1526:	60 ff       	sbrs	r22, 0
    1528:	1b c0       	rjmp	.+54     	; 0x1560 <__floatsisf+0x6c>
    152a:	6f 5f       	subi	r22, 0xFF	; 255
    152c:	7f 4f       	sbci	r23, 0xFF	; 255
    152e:	8f 4f       	sbci	r24, 0xFF	; 255
    1530:	9f 4f       	sbci	r25, 0xFF	; 255
    1532:	16 c0       	rjmp	.+44     	; 0x1560 <__floatsisf+0x6c>
    1534:	88 23       	and	r24, r24
    1536:	11 f0       	breq	.+4      	; 0x153c <__floatsisf+0x48>
    1538:	96 e9       	ldi	r25, 0x96	; 150
    153a:	11 c0       	rjmp	.+34     	; 0x155e <__floatsisf+0x6a>
    153c:	77 23       	and	r23, r23
    153e:	21 f0       	breq	.+8      	; 0x1548 <__floatsisf+0x54>
    1540:	9e e8       	ldi	r25, 0x8E	; 142
    1542:	87 2f       	mov	r24, r23
    1544:	76 2f       	mov	r23, r22
    1546:	05 c0       	rjmp	.+10     	; 0x1552 <__floatsisf+0x5e>
    1548:	66 23       	and	r22, r22
    154a:	71 f0       	breq	.+28     	; 0x1568 <__floatsisf+0x74>
    154c:	96 e8       	ldi	r25, 0x86	; 134
    154e:	86 2f       	mov	r24, r22
    1550:	70 e0       	ldi	r23, 0x00	; 0
    1552:	60 e0       	ldi	r22, 0x00	; 0
    1554:	2a f0       	brmi	.+10     	; 0x1560 <__floatsisf+0x6c>
    1556:	9a 95       	dec	r25
    1558:	66 0f       	add	r22, r22
    155a:	77 1f       	adc	r23, r23
    155c:	88 1f       	adc	r24, r24
    155e:	da f7       	brpl	.-10     	; 0x1556 <__floatsisf+0x62>
    1560:	88 0f       	add	r24, r24
    1562:	96 95       	lsr	r25
    1564:	87 95       	ror	r24
    1566:	97 f9       	bld	r25, 7
    1568:	08 95       	ret

0000156a <__fp_cmp>:
    156a:	99 0f       	add	r25, r25
    156c:	00 08       	sbc	r0, r0
    156e:	55 0f       	add	r21, r21
    1570:	aa 0b       	sbc	r26, r26
    1572:	e0 e8       	ldi	r30, 0x80	; 128
    1574:	fe ef       	ldi	r31, 0xFE	; 254
    1576:	16 16       	cp	r1, r22
    1578:	17 06       	cpc	r1, r23
    157a:	e8 07       	cpc	r30, r24
    157c:	f9 07       	cpc	r31, r25
    157e:	c0 f0       	brcs	.+48     	; 0x15b0 <__fp_cmp+0x46>
    1580:	12 16       	cp	r1, r18
    1582:	13 06       	cpc	r1, r19
    1584:	e4 07       	cpc	r30, r20
    1586:	f5 07       	cpc	r31, r21
    1588:	98 f0       	brcs	.+38     	; 0x15b0 <__fp_cmp+0x46>
    158a:	62 1b       	sub	r22, r18
    158c:	73 0b       	sbc	r23, r19
    158e:	84 0b       	sbc	r24, r20
    1590:	95 0b       	sbc	r25, r21
    1592:	39 f4       	brne	.+14     	; 0x15a2 <__fp_cmp+0x38>
    1594:	0a 26       	eor	r0, r26
    1596:	61 f0       	breq	.+24     	; 0x15b0 <__fp_cmp+0x46>
    1598:	23 2b       	or	r18, r19
    159a:	24 2b       	or	r18, r20
    159c:	25 2b       	or	r18, r21
    159e:	21 f4       	brne	.+8      	; 0x15a8 <__fp_cmp+0x3e>
    15a0:	08 95       	ret
    15a2:	0a 26       	eor	r0, r26
    15a4:	09 f4       	brne	.+2      	; 0x15a8 <__fp_cmp+0x3e>
    15a6:	a1 40       	sbci	r26, 0x01	; 1
    15a8:	a6 95       	lsr	r26
    15aa:	8f ef       	ldi	r24, 0xFF	; 255
    15ac:	81 1d       	adc	r24, r1
    15ae:	81 1d       	adc	r24, r1
    15b0:	08 95       	ret

000015b2 <__fp_inf>:
    15b2:	97 f9       	bld	r25, 7
    15b4:	9f 67       	ori	r25, 0x7F	; 127
    15b6:	80 e8       	ldi	r24, 0x80	; 128
    15b8:	70 e0       	ldi	r23, 0x00	; 0
    15ba:	60 e0       	ldi	r22, 0x00	; 0
    15bc:	08 95       	ret

000015be <__fp_nan>:
    15be:	9f ef       	ldi	r25, 0xFF	; 255
    15c0:	80 ec       	ldi	r24, 0xC0	; 192
    15c2:	08 95       	ret

000015c4 <__fp_powser>:
    15c4:	df 93       	push	r29
    15c6:	cf 93       	push	r28
    15c8:	1f 93       	push	r17
    15ca:	0f 93       	push	r16
    15cc:	ff 92       	push	r15
    15ce:	ef 92       	push	r14
    15d0:	df 92       	push	r13
    15d2:	7b 01       	movw	r14, r22
    15d4:	8c 01       	movw	r16, r24
    15d6:	68 94       	set
    15d8:	05 c0       	rjmp	.+10     	; 0x15e4 <__fp_powser+0x20>
    15da:	da 2e       	mov	r13, r26
    15dc:	ef 01       	movw	r28, r30
    15de:	af d0       	rcall	.+350    	; 0x173e <__mulsf3x>
    15e0:	fe 01       	movw	r30, r28
    15e2:	e8 94       	clt
    15e4:	a5 91       	lpm	r26, Z+
    15e6:	25 91       	lpm	r18, Z+
    15e8:	35 91       	lpm	r19, Z+
    15ea:	45 91       	lpm	r20, Z+
    15ec:	55 91       	lpm	r21, Z+
    15ee:	ae f3       	brts	.-22     	; 0x15da <__fp_powser+0x16>
    15f0:	ef 01       	movw	r28, r30
    15f2:	63 de       	rcall	.-826    	; 0x12ba <__addsf3x>
    15f4:	fe 01       	movw	r30, r28
    15f6:	97 01       	movw	r18, r14
    15f8:	a8 01       	movw	r20, r16
    15fa:	da 94       	dec	r13
    15fc:	79 f7       	brne	.-34     	; 0x15dc <__fp_powser+0x18>
    15fe:	df 90       	pop	r13
    1600:	ef 90       	pop	r14
    1602:	ff 90       	pop	r15
    1604:	0f 91       	pop	r16
    1606:	1f 91       	pop	r17
    1608:	cf 91       	pop	r28
    160a:	df 91       	pop	r29
    160c:	08 95       	ret

0000160e <__fp_pscA>:
    160e:	00 24       	eor	r0, r0
    1610:	0a 94       	dec	r0
    1612:	16 16       	cp	r1, r22
    1614:	17 06       	cpc	r1, r23
    1616:	18 06       	cpc	r1, r24
    1618:	09 06       	cpc	r0, r25
    161a:	08 95       	ret

0000161c <__fp_pscB>:
    161c:	00 24       	eor	r0, r0
    161e:	0a 94       	dec	r0
    1620:	12 16       	cp	r1, r18
    1622:	13 06       	cpc	r1, r19
    1624:	14 06       	cpc	r1, r20
    1626:	05 06       	cpc	r0, r21
    1628:	08 95       	ret
    162a:	c9 cf       	rjmp	.-110    	; 0x15be <__fp_nan>

0000162c <__fp_rempio2>:
    162c:	50 d0       	rcall	.+160    	; 0x16ce <__fp_splitA>
    162e:	e8 f3       	brcs	.-6      	; 0x162a <__fp_pscB+0xe>
    1630:	e8 94       	clt
    1632:	e0 e0       	ldi	r30, 0x00	; 0
    1634:	bb 27       	eor	r27, r27
    1636:	9f 57       	subi	r25, 0x7F	; 127
    1638:	f0 f0       	brcs	.+60     	; 0x1676 <__fp_rempio2+0x4a>
    163a:	2a ed       	ldi	r18, 0xDA	; 218
    163c:	3f e0       	ldi	r19, 0x0F	; 15
    163e:	49 ec       	ldi	r20, 0xC9	; 201
    1640:	06 c0       	rjmp	.+12     	; 0x164e <__fp_rempio2+0x22>
    1642:	ee 0f       	add	r30, r30
    1644:	bb 0f       	add	r27, r27
    1646:	66 1f       	adc	r22, r22
    1648:	77 1f       	adc	r23, r23
    164a:	88 1f       	adc	r24, r24
    164c:	28 f0       	brcs	.+10     	; 0x1658 <__fp_rempio2+0x2c>
    164e:	b2 3a       	cpi	r27, 0xA2	; 162
    1650:	62 07       	cpc	r22, r18
    1652:	73 07       	cpc	r23, r19
    1654:	84 07       	cpc	r24, r20
    1656:	28 f0       	brcs	.+10     	; 0x1662 <__fp_rempio2+0x36>
    1658:	b2 5a       	subi	r27, 0xA2	; 162
    165a:	62 0b       	sbc	r22, r18
    165c:	73 0b       	sbc	r23, r19
    165e:	84 0b       	sbc	r24, r20
    1660:	e3 95       	inc	r30
    1662:	9a 95       	dec	r25
    1664:	72 f7       	brpl	.-36     	; 0x1642 <__fp_rempio2+0x16>
    1666:	80 38       	cpi	r24, 0x80	; 128
    1668:	30 f4       	brcc	.+12     	; 0x1676 <__fp_rempio2+0x4a>
    166a:	9a 95       	dec	r25
    166c:	bb 0f       	add	r27, r27
    166e:	66 1f       	adc	r22, r22
    1670:	77 1f       	adc	r23, r23
    1672:	88 1f       	adc	r24, r24
    1674:	d2 f7       	brpl	.-12     	; 0x166a <__fp_rempio2+0x3e>
    1676:	90 48       	sbci	r25, 0x80	; 128
    1678:	06 c1       	rjmp	.+524    	; 0x1886 <__fp_mpack_finite>

0000167a <__fp_round>:
    167a:	09 2e       	mov	r0, r25
    167c:	03 94       	inc	r0
    167e:	00 0c       	add	r0, r0
    1680:	11 f4       	brne	.+4      	; 0x1686 <__fp_round+0xc>
    1682:	88 23       	and	r24, r24
    1684:	52 f0       	brmi	.+20     	; 0x169a <__fp_round+0x20>
    1686:	bb 0f       	add	r27, r27
    1688:	40 f4       	brcc	.+16     	; 0x169a <__fp_round+0x20>
    168a:	bf 2b       	or	r27, r31
    168c:	11 f4       	brne	.+4      	; 0x1692 <__fp_round+0x18>
    168e:	60 ff       	sbrs	r22, 0
    1690:	04 c0       	rjmp	.+8      	; 0x169a <__fp_round+0x20>
    1692:	6f 5f       	subi	r22, 0xFF	; 255
    1694:	7f 4f       	sbci	r23, 0xFF	; 255
    1696:	8f 4f       	sbci	r24, 0xFF	; 255
    1698:	9f 4f       	sbci	r25, 0xFF	; 255
    169a:	08 95       	ret

0000169c <__fp_sinus>:
    169c:	ef 93       	push	r30
    169e:	e0 ff       	sbrs	r30, 0
    16a0:	06 c0       	rjmp	.+12     	; 0x16ae <__fp_sinus+0x12>
    16a2:	a2 ea       	ldi	r26, 0xA2	; 162
    16a4:	2a ed       	ldi	r18, 0xDA	; 218
    16a6:	3f e0       	ldi	r19, 0x0F	; 15
    16a8:	49 ec       	ldi	r20, 0xC9	; 201
    16aa:	5f eb       	ldi	r21, 0xBF	; 191
    16ac:	06 de       	rcall	.-1012   	; 0x12ba <__addsf3x>
    16ae:	e5 df       	rcall	.-54     	; 0x167a <__fp_round>
    16b0:	0f 90       	pop	r0
    16b2:	03 94       	inc	r0
    16b4:	01 fc       	sbrc	r0, 1
    16b6:	90 58       	subi	r25, 0x80	; 128
    16b8:	e9 eb       	ldi	r30, 0xB9	; 185
    16ba:	f0 e0       	ldi	r31, 0x00	; 0
    16bc:	f7 c0       	rjmp	.+494    	; 0x18ac <__fp_powsodd>

000016be <__fp_split3>:
    16be:	57 fd       	sbrc	r21, 7
    16c0:	90 58       	subi	r25, 0x80	; 128
    16c2:	44 0f       	add	r20, r20
    16c4:	55 1f       	adc	r21, r21
    16c6:	59 f0       	breq	.+22     	; 0x16de <__fp_splitA+0x10>
    16c8:	5f 3f       	cpi	r21, 0xFF	; 255
    16ca:	71 f0       	breq	.+28     	; 0x16e8 <__fp_splitA+0x1a>
    16cc:	47 95       	ror	r20

000016ce <__fp_splitA>:
    16ce:	88 0f       	add	r24, r24
    16d0:	97 fb       	bst	r25, 7
    16d2:	99 1f       	adc	r25, r25
    16d4:	61 f0       	breq	.+24     	; 0x16ee <__fp_splitA+0x20>
    16d6:	9f 3f       	cpi	r25, 0xFF	; 255
    16d8:	79 f0       	breq	.+30     	; 0x16f8 <__fp_splitA+0x2a>
    16da:	87 95       	ror	r24
    16dc:	08 95       	ret
    16de:	12 16       	cp	r1, r18
    16e0:	13 06       	cpc	r1, r19
    16e2:	14 06       	cpc	r1, r20
    16e4:	55 1f       	adc	r21, r21
    16e6:	f2 cf       	rjmp	.-28     	; 0x16cc <__fp_split3+0xe>
    16e8:	46 95       	lsr	r20
    16ea:	f1 df       	rcall	.-30     	; 0x16ce <__fp_splitA>
    16ec:	08 c0       	rjmp	.+16     	; 0x16fe <__fp_splitA+0x30>
    16ee:	16 16       	cp	r1, r22
    16f0:	17 06       	cpc	r1, r23
    16f2:	18 06       	cpc	r1, r24
    16f4:	99 1f       	adc	r25, r25
    16f6:	f1 cf       	rjmp	.-30     	; 0x16da <__fp_splitA+0xc>
    16f8:	86 95       	lsr	r24
    16fa:	71 05       	cpc	r23, r1
    16fc:	61 05       	cpc	r22, r1
    16fe:	08 94       	sec
    1700:	08 95       	ret

00001702 <__fp_zero>:
    1702:	e8 94       	clt

00001704 <__fp_szero>:
    1704:	bb 27       	eor	r27, r27
    1706:	66 27       	eor	r22, r22
    1708:	77 27       	eor	r23, r23
    170a:	cb 01       	movw	r24, r22
    170c:	97 f9       	bld	r25, 7
    170e:	08 95       	ret

00001710 <__gesf2>:
    1710:	2c df       	rcall	.-424    	; 0x156a <__fp_cmp>
    1712:	08 f4       	brcc	.+2      	; 0x1716 <__gesf2+0x6>
    1714:	8f ef       	ldi	r24, 0xFF	; 255
    1716:	08 95       	ret

00001718 <inverse>:
    1718:	9b 01       	movw	r18, r22
    171a:	ac 01       	movw	r20, r24
    171c:	60 e0       	ldi	r22, 0x00	; 0
    171e:	70 e0       	ldi	r23, 0x00	; 0
    1720:	80 e8       	ldi	r24, 0x80	; 128
    1722:	9f e3       	ldi	r25, 0x3F	; 63
    1724:	4c ce       	rjmp	.-872    	; 0x13be <__divsf3>

00001726 <__mulsf3>:
    1726:	0b d0       	rcall	.+22     	; 0x173e <__mulsf3x>
    1728:	a8 cf       	rjmp	.-176    	; 0x167a <__fp_round>
    172a:	71 df       	rcall	.-286    	; 0x160e <__fp_pscA>
    172c:	28 f0       	brcs	.+10     	; 0x1738 <__mulsf3+0x12>
    172e:	76 df       	rcall	.-276    	; 0x161c <__fp_pscB>
    1730:	18 f0       	brcs	.+6      	; 0x1738 <__mulsf3+0x12>
    1732:	95 23       	and	r25, r21
    1734:	09 f0       	breq	.+2      	; 0x1738 <__mulsf3+0x12>
    1736:	3d cf       	rjmp	.-390    	; 0x15b2 <__fp_inf>
    1738:	42 cf       	rjmp	.-380    	; 0x15be <__fp_nan>
    173a:	11 24       	eor	r1, r1
    173c:	e3 cf       	rjmp	.-58     	; 0x1704 <__fp_szero>

0000173e <__mulsf3x>:
    173e:	bf df       	rcall	.-130    	; 0x16be <__fp_split3>
    1740:	a0 f3       	brcs	.-24     	; 0x172a <__mulsf3+0x4>

00001742 <__mulsf3_pse>:
    1742:	95 9f       	mul	r25, r21
    1744:	d1 f3       	breq	.-12     	; 0x173a <__mulsf3+0x14>
    1746:	95 0f       	add	r25, r21
    1748:	50 e0       	ldi	r21, 0x00	; 0
    174a:	55 1f       	adc	r21, r21
    174c:	62 9f       	mul	r22, r18
    174e:	f0 01       	movw	r30, r0
    1750:	72 9f       	mul	r23, r18
    1752:	bb 27       	eor	r27, r27
    1754:	f0 0d       	add	r31, r0
    1756:	b1 1d       	adc	r27, r1
    1758:	63 9f       	mul	r22, r19
    175a:	aa 27       	eor	r26, r26
    175c:	f0 0d       	add	r31, r0
    175e:	b1 1d       	adc	r27, r1
    1760:	aa 1f       	adc	r26, r26
    1762:	64 9f       	mul	r22, r20
    1764:	66 27       	eor	r22, r22
    1766:	b0 0d       	add	r27, r0
    1768:	a1 1d       	adc	r26, r1
    176a:	66 1f       	adc	r22, r22
    176c:	82 9f       	mul	r24, r18
    176e:	22 27       	eor	r18, r18
    1770:	b0 0d       	add	r27, r0
    1772:	a1 1d       	adc	r26, r1
    1774:	62 1f       	adc	r22, r18
    1776:	73 9f       	mul	r23, r19
    1778:	b0 0d       	add	r27, r0
    177a:	a1 1d       	adc	r26, r1
    177c:	62 1f       	adc	r22, r18
    177e:	83 9f       	mul	r24, r19
    1780:	a0 0d       	add	r26, r0
    1782:	61 1d       	adc	r22, r1
    1784:	22 1f       	adc	r18, r18
    1786:	74 9f       	mul	r23, r20
    1788:	33 27       	eor	r19, r19
    178a:	a0 0d       	add	r26, r0
    178c:	61 1d       	adc	r22, r1
    178e:	23 1f       	adc	r18, r19
    1790:	84 9f       	mul	r24, r20
    1792:	60 0d       	add	r22, r0
    1794:	21 1d       	adc	r18, r1
    1796:	82 2f       	mov	r24, r18
    1798:	76 2f       	mov	r23, r22
    179a:	6a 2f       	mov	r22, r26
    179c:	11 24       	eor	r1, r1
    179e:	9f 57       	subi	r25, 0x7F	; 127
    17a0:	50 40       	sbci	r21, 0x00	; 0
    17a2:	8a f0       	brmi	.+34     	; 0x17c6 <__mulsf3_pse+0x84>
    17a4:	e1 f0       	breq	.+56     	; 0x17de <__mulsf3_pse+0x9c>
    17a6:	88 23       	and	r24, r24
    17a8:	4a f0       	brmi	.+18     	; 0x17bc <__mulsf3_pse+0x7a>
    17aa:	ee 0f       	add	r30, r30
    17ac:	ff 1f       	adc	r31, r31
    17ae:	bb 1f       	adc	r27, r27
    17b0:	66 1f       	adc	r22, r22
    17b2:	77 1f       	adc	r23, r23
    17b4:	88 1f       	adc	r24, r24
    17b6:	91 50       	subi	r25, 0x01	; 1
    17b8:	50 40       	sbci	r21, 0x00	; 0
    17ba:	a9 f7       	brne	.-22     	; 0x17a6 <__mulsf3_pse+0x64>
    17bc:	9e 3f       	cpi	r25, 0xFE	; 254
    17be:	51 05       	cpc	r21, r1
    17c0:	70 f0       	brcs	.+28     	; 0x17de <__mulsf3_pse+0x9c>
    17c2:	f7 ce       	rjmp	.-530    	; 0x15b2 <__fp_inf>
    17c4:	9f cf       	rjmp	.-194    	; 0x1704 <__fp_szero>
    17c6:	5f 3f       	cpi	r21, 0xFF	; 255
    17c8:	ec f3       	brlt	.-6      	; 0x17c4 <__mulsf3_pse+0x82>
    17ca:	98 3e       	cpi	r25, 0xE8	; 232
    17cc:	dc f3       	brlt	.-10     	; 0x17c4 <__mulsf3_pse+0x82>
    17ce:	86 95       	lsr	r24
    17d0:	77 95       	ror	r23
    17d2:	67 95       	ror	r22
    17d4:	b7 95       	ror	r27
    17d6:	f7 95       	ror	r31
    17d8:	e7 95       	ror	r30
    17da:	9f 5f       	subi	r25, 0xFF	; 255
    17dc:	c1 f7       	brne	.-16     	; 0x17ce <__mulsf3_pse+0x8c>
    17de:	fe 2b       	or	r31, r30
    17e0:	88 0f       	add	r24, r24
    17e2:	91 1d       	adc	r25, r1
    17e4:	96 95       	lsr	r25
    17e6:	87 95       	ror	r24
    17e8:	97 f9       	bld	r25, 7
    17ea:	08 95       	ret

000017ec <sin>:
    17ec:	9f 93       	push	r25
    17ee:	1e df       	rcall	.-452    	; 0x162c <__fp_rempio2>
    17f0:	0f 90       	pop	r0
    17f2:	07 fc       	sbrc	r0, 7
    17f4:	ee 5f       	subi	r30, 0xFE	; 254
    17f6:	52 cf       	rjmp	.-348    	; 0x169c <__fp_sinus>
    17f8:	11 f4       	brne	.+4      	; 0x17fe <sin+0x12>
    17fa:	0e f4       	brtc	.+2      	; 0x17fe <sin+0x12>
    17fc:	e0 ce       	rjmp	.-576    	; 0x15be <__fp_nan>
    17fe:	41 c0       	rjmp	.+130    	; 0x1882 <__fp_mpack>

00001800 <sqrt>:
    1800:	66 df       	rcall	.-308    	; 0x16ce <__fp_splitA>
    1802:	d0 f3       	brcs	.-12     	; 0x17f8 <sin+0xc>
    1804:	99 23       	and	r25, r25
    1806:	d9 f3       	breq	.-10     	; 0x17fe <sin+0x12>
    1808:	ce f3       	brts	.-14     	; 0x17fc <sin+0x10>
    180a:	9f 57       	subi	r25, 0x7F	; 127
    180c:	55 0b       	sbc	r21, r21
    180e:	87 ff       	sbrs	r24, 7
    1810:	46 d0       	rcall	.+140    	; 0x189e <__fp_norm2>
    1812:	00 24       	eor	r0, r0
    1814:	a0 e6       	ldi	r26, 0x60	; 96
    1816:	40 ea       	ldi	r20, 0xA0	; 160
    1818:	90 01       	movw	r18, r0
    181a:	80 58       	subi	r24, 0x80	; 128
    181c:	56 95       	lsr	r21
    181e:	97 95       	ror	r25
    1820:	28 f4       	brcc	.+10     	; 0x182c <sqrt+0x2c>
    1822:	80 5c       	subi	r24, 0xC0	; 192
    1824:	66 0f       	add	r22, r22
    1826:	77 1f       	adc	r23, r23
    1828:	88 1f       	adc	r24, r24
    182a:	20 f0       	brcs	.+8      	; 0x1834 <sqrt+0x34>
    182c:	26 17       	cp	r18, r22
    182e:	37 07       	cpc	r19, r23
    1830:	48 07       	cpc	r20, r24
    1832:	30 f4       	brcc	.+12     	; 0x1840 <sqrt+0x40>
    1834:	62 1b       	sub	r22, r18
    1836:	73 0b       	sbc	r23, r19
    1838:	84 0b       	sbc	r24, r20
    183a:	20 29       	or	r18, r0
    183c:	31 29       	or	r19, r1
    183e:	4a 2b       	or	r20, r26
    1840:	a6 95       	lsr	r26
    1842:	17 94       	ror	r1
    1844:	07 94       	ror	r0
    1846:	20 25       	eor	r18, r0
    1848:	31 25       	eor	r19, r1
    184a:	4a 27       	eor	r20, r26
    184c:	58 f7       	brcc	.-42     	; 0x1824 <sqrt+0x24>
    184e:	66 0f       	add	r22, r22
    1850:	77 1f       	adc	r23, r23
    1852:	88 1f       	adc	r24, r24
    1854:	20 f0       	brcs	.+8      	; 0x185e <sqrt+0x5e>
    1856:	26 17       	cp	r18, r22
    1858:	37 07       	cpc	r19, r23
    185a:	48 07       	cpc	r20, r24
    185c:	30 f4       	brcc	.+12     	; 0x186a <sqrt+0x6a>
    185e:	62 0b       	sbc	r22, r18
    1860:	73 0b       	sbc	r23, r19
    1862:	84 0b       	sbc	r24, r20
    1864:	20 0d       	add	r18, r0
    1866:	31 1d       	adc	r19, r1
    1868:	41 1d       	adc	r20, r1
    186a:	a0 95       	com	r26
    186c:	81 f7       	brne	.-32     	; 0x184e <sqrt+0x4e>
    186e:	b9 01       	movw	r22, r18
    1870:	84 2f       	mov	r24, r20
    1872:	91 58       	subi	r25, 0x81	; 129
    1874:	88 0f       	add	r24, r24
    1876:	96 95       	lsr	r25
    1878:	87 95       	ror	r24
    187a:	08 95       	ret

0000187c <square>:
    187c:	9b 01       	movw	r18, r22
    187e:	ac 01       	movw	r20, r24
    1880:	52 cf       	rjmp	.-348    	; 0x1726 <__mulsf3>

00001882 <__fp_mpack>:
    1882:	9f 3f       	cpi	r25, 0xFF	; 255
    1884:	31 f0       	breq	.+12     	; 0x1892 <__fp_mpack_finite+0xc>

00001886 <__fp_mpack_finite>:
    1886:	91 50       	subi	r25, 0x01	; 1
    1888:	20 f4       	brcc	.+8      	; 0x1892 <__fp_mpack_finite+0xc>
    188a:	87 95       	ror	r24
    188c:	77 95       	ror	r23
    188e:	67 95       	ror	r22
    1890:	b7 95       	ror	r27
    1892:	88 0f       	add	r24, r24
    1894:	91 1d       	adc	r25, r1
    1896:	96 95       	lsr	r25
    1898:	87 95       	ror	r24
    189a:	97 f9       	bld	r25, 7
    189c:	08 95       	ret

0000189e <__fp_norm2>:
    189e:	91 50       	subi	r25, 0x01	; 1
    18a0:	50 40       	sbci	r21, 0x00	; 0
    18a2:	66 0f       	add	r22, r22
    18a4:	77 1f       	adc	r23, r23
    18a6:	88 1f       	adc	r24, r24
    18a8:	d2 f7       	brpl	.-12     	; 0x189e <__fp_norm2>
    18aa:	08 95       	ret

000018ac <__fp_powsodd>:
    18ac:	9f 93       	push	r25
    18ae:	8f 93       	push	r24
    18b0:	7f 93       	push	r23
    18b2:	6f 93       	push	r22
    18b4:	ff 93       	push	r31
    18b6:	ef 93       	push	r30
    18b8:	9b 01       	movw	r18, r22
    18ba:	ac 01       	movw	r20, r24
    18bc:	34 df       	rcall	.-408    	; 0x1726 <__mulsf3>
    18be:	ef 91       	pop	r30
    18c0:	ff 91       	pop	r31
    18c2:	80 de       	rcall	.-768    	; 0x15c4 <__fp_powser>
    18c4:	2f 91       	pop	r18
    18c6:	3f 91       	pop	r19
    18c8:	4f 91       	pop	r20
    18ca:	5f 91       	pop	r21
    18cc:	2c cf       	rjmp	.-424    	; 0x1726 <__mulsf3>

000018ce <__divmodhi4>:
    18ce:	97 fb       	bst	r25, 7
    18d0:	07 2e       	mov	r0, r23
    18d2:	16 f4       	brtc	.+4      	; 0x18d8 <__divmodhi4+0xa>
    18d4:	00 94       	com	r0
    18d6:	06 d0       	rcall	.+12     	; 0x18e4 <__divmodhi4_neg1>
    18d8:	77 fd       	sbrc	r23, 7
    18da:	08 d0       	rcall	.+16     	; 0x18ec <__divmodhi4_neg2>
    18dc:	0b d0       	rcall	.+22     	; 0x18f4 <__udivmodhi4>
    18de:	07 fc       	sbrc	r0, 7
    18e0:	05 d0       	rcall	.+10     	; 0x18ec <__divmodhi4_neg2>
    18e2:	3e f4       	brtc	.+14     	; 0x18f2 <__divmodhi4_exit>

000018e4 <__divmodhi4_neg1>:
    18e4:	90 95       	com	r25
    18e6:	81 95       	neg	r24
    18e8:	9f 4f       	sbci	r25, 0xFF	; 255
    18ea:	08 95       	ret

000018ec <__divmodhi4_neg2>:
    18ec:	70 95       	com	r23
    18ee:	61 95       	neg	r22
    18f0:	7f 4f       	sbci	r23, 0xFF	; 255

000018f2 <__divmodhi4_exit>:
    18f2:	08 95       	ret

000018f4 <__udivmodhi4>:
    18f4:	aa 1b       	sub	r26, r26
    18f6:	bb 1b       	sub	r27, r27
    18f8:	51 e1       	ldi	r21, 0x11	; 17
    18fa:	07 c0       	rjmp	.+14     	; 0x190a <__udivmodhi4_ep>

000018fc <__udivmodhi4_loop>:
    18fc:	aa 1f       	adc	r26, r26
    18fe:	bb 1f       	adc	r27, r27
    1900:	a6 17       	cp	r26, r22
    1902:	b7 07       	cpc	r27, r23
    1904:	10 f0       	brcs	.+4      	; 0x190a <__udivmodhi4_ep>
    1906:	a6 1b       	sub	r26, r22
    1908:	b7 0b       	sbc	r27, r23

0000190a <__udivmodhi4_ep>:
    190a:	88 1f       	adc	r24, r24
    190c:	99 1f       	adc	r25, r25
    190e:	5a 95       	dec	r21
    1910:	a9 f7       	brne	.-22     	; 0x18fc <__udivmodhi4_loop>
    1912:	80 95       	com	r24
    1914:	90 95       	com	r25
    1916:	bc 01       	movw	r22, r24
    1918:	cd 01       	movw	r24, r26
    191a:	08 95       	ret

0000191c <_exit>:
    191c:	f8 94       	cli

0000191e <__stop_program>:
    191e:	ff cf       	rjmp	.-2      	; 0x191e <__stop_program>
